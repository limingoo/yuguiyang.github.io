<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>于贵洋的博客</title>
  <subtitle>BI、数据分析</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuguiyang.github.io/"/>
  <updated>2017-10-25T06:38:40.097Z</updated>
  <id>https://yuguiyang.github.io/</id>
  
  <author>
    <name>于贵洋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>愿人生从容(置顶)</title>
    <link href="https://yuguiyang.github.io/2017/12/31/top/"/>
    <id>https://yuguiyang.github.io/2017/12/31/top/</id>
    <published>2017-12-31T13:59:00.000Z</published>
    <updated>2017-10-25T06:38:40.097Z</updated>
    
    <content type="html"><![CDATA[<p>Hi，欢迎访问我的博客。</p>
<p>在这里分享BI、数据分析等相关的技术内容；个人随笔、感悟。</p>
<p>欢迎和我交流分享。</p>
<p>愿你出走半生，归来仍是少年。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hi，欢迎访问我的博客。&lt;/p&gt;
&lt;p&gt;在这里分享BI、数据分析等相关的技术内容；个人随笔、感悟。&lt;/p&gt;
&lt;p&gt;欢迎和我交流分享。&lt;/p&gt;
&lt;p&gt;愿你出走半生，归来仍是少年。&lt;/p&gt;

    
    </summary>
    
      <category term="随笔" scheme="https://yuguiyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://yuguiyang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>什么是沟通？</title>
    <link href="https://yuguiyang.github.io/2017/10/31/jotting-05/"/>
    <id>https://yuguiyang.github.io/2017/10/31/jotting-05/</id>
    <published>2017-10-31T10:59:00.000Z</published>
    <updated>2017-11-01T05:25:55.984Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>这是一篇吐槽的</p>
</blockquote>
<p>最近辞职找工作，有一个很尴尬的问题<br>上一家十月初辞的，10月份的五险一金是不给交的，不交就不交吧，兴许明天就找到工作了呢<br>万万没想到，十月份不是一个换工作的好时机，正好赶上秋招，各种校招职位，哎，心累<br>那就慢慢投，慢慢找，总有眼神不好的公司带走我这棵白菜</p>
<p>找到工作以后呢，得把之前的公积金账号转到新公司，然后问题就来了，之前和上家人事说好了，又事情直接在微信上找他就行</p>
<blockquote>
<p>我：”你好，这边帮忙把我的公积金账号转到xxxx吧，谢谢“”<br>…</p>
</blockquote>
<p>人家一直没回复，我想着人事可能比较忙，反正也不是特别急<br>然后就等了一天，还是没消息，可能真的忙，那就明天再看看<br>然后还是没回复，也没拉黑呀，难道现在拉黑都不提示了，或者以为我是陌生人…<br>我又发了消息</p>
<blockquote>
<p>我：“你好，我是xxx，刚从公司离职，可以帮我把公积金转到xxx吗，谢谢”<br>…</p>
</blockquote>
<p>然后我的消息就好像发送到了外星球，一去不复返，嘿，难道这是家黑公司，专门骗人的？<br>难道人事离职了，换微信了？<br>好尴尬，有点儿懵，喝瓶雪碧压压惊</p>
<a id="more"></a>
<p>然后我就分析了一下</p>
<ul>
<li>如果人事离职了，不再用这个微信了<br>那我只能去趟公司了，只要没有出现“公司搬家了，没告诉我”，问题都可以解决</li>
<li>如果公司搬家了<br>…… 懵，只能找相关部门了</li>
<li>人事真的太忙<br>人事的工作量这么大，一天天的没休息时间，我可不信</li>
</ul>
<p>我再试一次吧</p>
<blockquote>
<p>我：“你好，在不在，能不能回复一下，是有什么问题嘛？”</p>
</blockquote>
<p>从夏天等到秋天，树叶还在飘，对方终于回复我了</p>
<blockquote>
<p>人事：“已经操作了，需要2、3天的时间才可以”<br>我：“奥奥，好的，谢谢”</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">以上对话内容，做了适当删减，不然可能太过血腥暴力少儿不宜</div></pre></td></tr></table></figure>
<p>哎呀，这人事做的不能不吐槽，你这是公司离职人数太多，每天操作不过来？<br>就是忙微信回一下也行啊，当然，如果一天几十个人在微信上说转这个转那个，我可能也受不了，不愿意回<br>再喝口雪碧，还好离职早，要不等人事离职就悲剧了</p>
<p>正常人事的沟通能力、办事能力应该很强啊，这人事也不知道谁招过去的，得好好反省一下<br>好了，每日吐槽完成，愿世界和平。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是一篇吐槽的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近辞职找工作，有一个很尴尬的问题&lt;br&gt;上一家十月初辞的，10月份的五险一金是不给交的，不交就不交吧，兴许明天就找到工作了呢&lt;br&gt;万万没想到，十月份不是一个换工作的好时机，正好赶上秋招，各种校招职位，哎，心累&lt;br&gt;那就慢慢投，慢慢找，总有眼神不好的公司带走我这棵白菜&lt;/p&gt;
&lt;p&gt;找到工作以后呢，得把之前的公积金账号转到新公司，然后问题就来了，之前和上家人事说好了，又事情直接在微信上找他就行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我：”你好，这边帮忙把我的公积金账号转到xxxx吧，谢谢“”&lt;br&gt;…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人家一直没回复，我想着人事可能比较忙，反正也不是特别急&lt;br&gt;然后就等了一天，还是没消息，可能真的忙，那就明天再看看&lt;br&gt;然后还是没回复，也没拉黑呀，难道现在拉黑都不提示了，或者以为我是陌生人…&lt;br&gt;我又发了消息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我：“你好，我是xxx，刚从公司离职，可以帮我把公积金转到xxx吗，谢谢”&lt;br&gt;…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后我的消息就好像发送到了外星球，一去不复返，嘿，难道这是家黑公司，专门骗人的？&lt;br&gt;难道人事离职了，换微信了？&lt;br&gt;好尴尬，有点儿懵，喝瓶雪碧压压惊&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://yuguiyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://yuguiyang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>你为什么离职？</title>
    <link href="https://yuguiyang.github.io/2017/10/31/jotting-04/"/>
    <id>https://yuguiyang.github.io/2017/10/31/jotting-04/</id>
    <published>2017-10-31T02:59:00.000Z</published>
    <updated>2017-10-31T15:19:51.275Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>HR：“为什么从上一家公司辞职？”<br>我：“。。。”</p>
</blockquote>
<hr>
<p>最近在找工作，投了很多简历，面了很多试，经常被问到这个问题，以至于后来面试官不问我，我都会反问他“你咋不问我为啥离职啊？真是太不专业了，这个公司不行，说着我就走出了阿里园区”（别介意，只是一个梦，希望有机会去这些互联网巨头公司）</p>
<p>面试的时候问还是好的，奇葩的是，经常还会接到电话问：</p>
<blockquote>
<p>我：“喂，你好”<br>来电：“请问是xxx先生吗？”<br>我：“对，你是？”<br>来电：“你为什么从上家公司离职啊？”<br>我：“。。。”</p>
</blockquote>
<p>这种电话还真是无语，不知道在哪儿看到我的简历，就打电话来问<br>问就问呗，起码得告诉我你是干嘛的，要不我还以为是上家公司做电话回访<br>一问就是什么什么猎头，什么什么公司，真是醉了，我都怀疑他们这样能不能招到人<br>问之前起码介绍下，什么公司，什么岗位，有的直接就</p>
<blockquote>
<p>我：“喂，你好”<br>来电：“请问是xxx先生吗？”<br>我：“对，你是？”<br>来电：“你现在薪资多少？期望多少？”<br>我：“。。。”</p>
</blockquote>
<a id="more"></a>
<p>好像我已经确定要去入职了一样，又不是菜市场买菜，你看上我了就可以买我<br>虽然我好看好吃，但也不能这样啊，做人得矜持一点儿，忍住不要激动，如果你也好看好吃，不要钱你就可以带我走，都不用带，我直接跟你走，想不要都不行，就跟着你<br>所以以后招聘应该直接加微信，证明一下你真的好看，然后我们再聊<br>这些电话我一般就回复“奥，已经找到工作了”，然后对方就自觉挂掉了</p>
<p>找工作的时候，还是最期望投简历的公司打来电话，<br>我觉得你好看好吃，我得让你知道我啊，嗯，然后投一下简历，80%的简历投出去，就没有然后了，一般这个时候，就算是来一个诈骗电话，我都会接，万一是我投的公司呢，是吧</p>
<blockquote>
<p>我：“喂，你好”<br>来电：“地铁附近商铺投资要考虑一下吗？”<br>我：“。。。你们公司招人吗？”<br>来电：“。。。”</p>
</blockquote>
<p>北京大妈卖煎饼果子都月入三万了，我觉得我创业的时机到了<br>其实我一直都觉得煎饼果子很挣钱，我的梦想就是开一家店卖煎饼果子<br>话说上海的煎饼果子和北方的不一样，感觉还是北方的好吃些<br>记得在东北老家上学的时候，学校门口都会有一个卖煎饼果子的摊儿，每天去买个煎饼果子，然后我就站那边吃边看，那个时候也就2、3块钱起步，每次买都有10几个人在排队，也就早上、中午、晚上这3个时间点买的人多，哦，跑题了，这个创业大计以后再说</p>
<p>找工作的时候，来电话特别多，平时也就快递、外卖，这段时间还挺欣慰，总是有人问你“想找个什么样的工作啊？期望的薪资是多少啊？”，被一些陌生人关心还是挺开心的</p>
<p>说到底，还是自己技术不到位，还得到处找工作，不是说牛掰的人都是工作自己找过去嘛。<br>IT这个行业也搞了好几年了，以前朋友总是吐槽“少壮不努力，老大搞IT”<br>做IT好不好玩儿呢？仁者见仁智者见智</p>
<p>我们回到主题，为什么离职呢？<br>以前在网上看到关于马云老师对这个的看法，不知道是真是假</p>
<blockquote>
<p>离职原因，总结来说就2个原因：</p>
<ol>
<li>钱没给到位</li>
<li>心受委屈了</li>
</ol>
</blockquote>
<p>说的好像挺在理，当然，一定会有一些别的理由，像什么“公司搬家了没告诉我”这种<br>我觉得可能还有一种：</p>
<blockquote>
<p>“你是个好人，但我们不合适”</p>
</blockquote>
<p>好了，不管咋样，做好自己的规划，理性离职，三思而后行。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;HR：“为什么从上一家公司辞职？”&lt;br&gt;我：“。。。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;最近在找工作，投了很多简历，面了很多试，经常被问到这个问题，以至于后来面试官不问我，我都会反问他“你咋不问我为啥离职啊？真是太不专业了，这个公司不行，说着我就走出了阿里园区”（别介意，只是一个梦，希望有机会去这些互联网巨头公司）&lt;/p&gt;
&lt;p&gt;面试的时候问还是好的，奇葩的是，经常还会接到电话问：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我：“喂，你好”&lt;br&gt;来电：“请问是xxx先生吗？”&lt;br&gt;我：“对，你是？”&lt;br&gt;来电：“你为什么从上家公司离职啊？”&lt;br&gt;我：“。。。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种电话还真是无语，不知道在哪儿看到我的简历，就打电话来问&lt;br&gt;问就问呗，起码得告诉我你是干嘛的，要不我还以为是上家公司做电话回访&lt;br&gt;一问就是什么什么猎头，什么什么公司，真是醉了，我都怀疑他们这样能不能招到人&lt;br&gt;问之前起码介绍下，什么公司，什么岗位，有的直接就&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我：“喂，你好”&lt;br&gt;来电：“请问是xxx先生吗？”&lt;br&gt;我：“对，你是？”&lt;br&gt;来电：“你现在薪资多少？期望多少？”&lt;br&gt;我：“。。。”&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://yuguiyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://yuguiyang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>常见图表-折线图</title>
    <link href="https://yuguiyang.github.io/2017/10/30/statistics-handbook-06/"/>
    <id>https://yuguiyang.github.io/2017/10/30/statistics-handbook-06/</id>
    <published>2017-10-30T07:08:00.000Z</published>
    <updated>2017-10-30T07:51:39.245Z</updated>
    
    <content type="html"><![CDATA[<p>常见图表介绍及实例</p>
<blockquote>
<p>本篇为阅读笔记《数据化运营速成手册》</p>
</blockquote>
<p>折线图也是我们经常使用的一个图表，它主要是提现趋势变化，所以经常和时间序列一起使用。</p>
<h1 id="怎样观察趋势"><a href="#怎样观察趋势" class="headerlink" title="怎样观察趋势"></a>怎样观察趋势</h1><ul>
<li>利用趋势线<br>通过趋势线，我们可以观察数据的整体变化趋势，一般使用线性趋势，看线是向上倾斜还是向下倾斜，通过显示趋势线的公式，我们可以来看增长的速率是否满足自身需求</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-e4094f4b721271b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-e20c67bfc5133ac7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li><p>折线图的波动情况<br>观察折线是剧烈波动，还是平稳的上升（下降），波动越激烈，说明不可控性越强，以活跃用户数为例的话，一定是希望他可以平稳上升，如果总是波动，说明产品对用户的吸引力不够，没有稳定的成熟用户<br>而且还要关注波动变化的时间点，比如极值，数据的增长和下降一定都会有原因</p>
</li>
<li><p>关注拐点<br>比如数据一直上升，突然下降，我们就一定要去找到下降的原因</p>
</li>
</ul>
<a id="more"></a>
<h1 id="探寻趋势变化的原因"><a href="#探寻趋势变化的原因" class="headerlink" title="探寻趋势变化的原因"></a>探寻趋势变化的原因</h1><p>当我们发现趋势变化后，自然会追问变化的原因，可以使用这样的步骤：<br>定位问题-梳理事件-分析逻辑关系-得出结论</p>
<h2 id="定位问题"><a href="#定位问题" class="headerlink" title="定位问题"></a>定位问题</h2><p>首先我们要确定问题，可以从下面这几个点来看</p>
<ul>
<li><p>什么/谁<br>这里确认的就是我们观察的指标，比如活跃用户数或用户激活数等</p>
</li>
<li><p>什么时候<br>就是我们上面观察的拐点，看是从什么时间点开始下降</p>
</li>
<li><p>在哪里<br>这里但从折线图上看不出来，我们需要对指标进行多维度的下钻分析</p>
</li>
<li><p>怎么样<br>这里我们要将指标进行拆解，比如激活率，他是计算指标，使用激活用户数除以注册用户数，那么激活率下降有可能是激活数下降或者注册用户数增加导致的</p>
</li>
</ul>
<h2 id="梳理事件"><a href="#梳理事件" class="headerlink" title="梳理事件"></a>梳理事件</h2><p>上面，我们确认了问题，下面我们就要找到可能导致问题的一些事件，清晰的事件记录很重要</p>
<ul>
<li><p>公司内部事件<br>产品优化记录、运营策略改变、运营活动记录，我们要知道这些改变的时间点</p>
</li>
<li><p>竞争对手事件<br>竞争对手的产品优化、运营活动等和上面公司内部事件差不多</p>
</li>
<li><p>市场环境事件<br>政策变化、新闻报道、舆论事件</p>
</li>
</ul>
<h2 id="分析逻辑关系"><a href="#分析逻辑关系" class="headerlink" title="分析逻辑关系"></a>分析逻辑关系</h2><p>我们可以将主要的事件标注在折线图上</p>
<h2 id="得出结论"><a href="#得出结论" class="headerlink" title="得出结论"></a>得出结论</h2><p>综合我们得到的所有信息，整理结论</p>
<h1 id="折线图的变种-面积图"><a href="#折线图的变种-面积图" class="headerlink" title="折线图的变种-面积图"></a>折线图的变种-面积图</h1><p>面积图和折线图比较类似，都是强调趋势变化，而面积图还可以更好的观察总量与每部分结构的关系情况<br><img src="http://upload-images.jianshu.io/upload_images/76024-a34374c8eaa7eea6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见图表介绍及实例&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本篇为阅读笔记《数据化运营速成手册》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;折线图也是我们经常使用的一个图表，它主要是提现趋势变化，所以经常和时间序列一起使用。&lt;/p&gt;
&lt;h1 id=&quot;怎样观察趋势&quot;&gt;&lt;a href=&quot;#怎样观察趋势&quot; class=&quot;headerlink&quot; title=&quot;怎样观察趋势&quot;&gt;&lt;/a&gt;怎样观察趋势&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;利用趋势线&lt;br&gt;通过趋势线，我们可以观察数据的整体变化趋势，一般使用线性趋势，看线是向上倾斜还是向下倾斜，通过显示趋势线的公式，我们可以来看增长的速率是否满足自身需求&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-e4094f4b721271b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-e20c67bfc5133ac7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;折线图的波动情况&lt;br&gt;观察折线是剧烈波动，还是平稳的上升（下降），波动越激烈，说明不可控性越强，以活跃用户数为例的话，一定是希望他可以平稳上升，如果总是波动，说明产品对用户的吸引力不够，没有稳定的成熟用户&lt;br&gt;而且还要关注波动变化的时间点，比如极值，数据的增长和下降一定都会有原因&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关注拐点&lt;br&gt;比如数据一直上升，突然下降，我们就一定要去找到下降的原因&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="统计知识" scheme="https://yuguiyang.github.io/categories/%E7%BB%9F%E8%AE%A1%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="统计" scheme="https://yuguiyang.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>数据标准化小记</title>
    <link href="https://yuguiyang.github.io/2017/10/30/statistics-handbook-05/"/>
    <id>https://yuguiyang.github.io/2017/10/30/statistics-handbook-05/</id>
    <published>2017-10-30T04:08:00.000Z</published>
    <updated>2017-10-30T05:32:49.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是数据标准化"><a href="#什么是数据标准化" class="headerlink" title="什么是数据标准化"></a>什么是数据标准化</h1><p>我们平时分析一个指标的时候，或者对比数据的时候可能都有单位，比如身高（cm）,体重（Kg），如果我们想要对这2个指标进行综合分析的话，就需要让指标脱离单位的限制，这应该就是数据标准化。</p>
<ul>
<li>from 互动百科<br>数据的标准化（normalization）是将数据按比例缩放，使之落入一个小的特定区间。在某些比较和评价的指标处理中经常会用到，去除数据的单位限制，将其转化为无量纲的纯数值，便于不同单位或量级的指标能够进行比较和加权。其中最典型的就是0-1标准化和Z标准化。</li>
</ul>
<h1 id="为什么要进行数据标准化"><a href="#为什么要进行数据标准化" class="headerlink" title="为什么要进行数据标准化"></a>为什么要进行数据标准化</h1><ul>
<li>from 百度百科<br>评价是现代社会各领域的一项经常性的工作，是科学做出管理决策的重要依据。随着人们研究领域的不断扩大，所面临的评价对象日趋复杂，如果仅依据单一指标对事物进行评价往往不尽合理，必须全面地从整体的角度考虑问题，多指标综合评价方法应运而生。所谓多指标综合评价方法，就是把描述评价对象不同方面的多个指标的信息综合起来，并得到一个综合指标，由此对评价对象做一个整体上的评判，并进行横向或纵向比较。<br>而在多指标评价体系中，由于各评价指标的性质不同，通常具有不同的量纲和数量级。当各指标间的水平相差很大时，如果直接用原始指标值进行分析，就会突出数值较高的指标在综合分析中的作用，相对削弱数值水平较低指标的作用。因此，为了保证结果的可靠性，需要对原始指标数据进行标准化处理。</li>
</ul>
<p>小例子(来源见附录)：<br>假设对3名新生婴儿体重（5，6，7）和3名成年人的体重（150，151，152）差异的大小进行对比分析，从表面上看，两组人员的平均差异均为1斤，由此便得出两组人员的体重差异程度相同显然是不合适，因为两者的体重水平不在同一等级上，即量纲不同；</p>
<a id="more"></a>
<h1 id="数据标准化的方法"><a href="#数据标准化的方法" class="headerlink" title="数据标准化的方法"></a>数据标准化的方法</h1><h2 id="Max-Min标准化-离差标准化"><a href="#Max-Min标准化-离差标准化" class="headerlink" title="Max-Min标准化/离差标准化"></a>Max-Min标准化/离差标准化</h2><blockquote>
<p>min-max标准化方法是对原始数据进行线性变换。设minA和maxA分别为属性A的最小值和最大值，将A的一个原始值x通过min-max标准化映射成在区间[0,1]中的值x’，其公式为：<br>新数据=（原数据-最小值）/（最大值-最小值）</p>
</blockquote>
<p>其缺陷是当有新数据加入时，可能导致max或min的变化，转换函数需要重新定义。</p>
<h2 id="Z-score-标准化-标准差标准化-零均值标准化"><a href="#Z-score-标准化-标准差标准化-零均值标准化" class="headerlink" title="Z-score 标准化/标准差标准化/零均值标准化"></a>Z-score 标准化/标准差标准化/零均值标准化</h2><blockquote>
<p>这种方法基于原始数据的均值（mean）和标准差（standard deviation）进行数据的标准化。将A的原始值x使用z-score标准化到x’。<br>z-score标准化方法适用于属性A的最大值和最小值未知的情况，或有超出取值范围的离群数据的情况。<br>新数据=（原数据-均值）/标准差</p>
</blockquote>
<p>标准化后的数据符合标准正态分布，即均值为0，标准差为1</p>
<p>该方法对离群点不敏感，当原始数据的最大值、最小值未知或离群点左右了Max-Min标准化时非常有用，Z-Score标准化目前使用最为广泛的标准化方法。</p>
<h2 id="小数定标（decimal-scaling）标准化"><a href="#小数定标（decimal-scaling）标准化" class="headerlink" title="小数定标（decimal scaling）标准化"></a>小数定标（decimal scaling）标准化</h2><blockquote>
<p>这种方法通过移动数据的小数点位置来进行标准化。小数点移动多少位取决于属性A的取值中的最大绝对值。将属性A的原始值x使用decimal scaling标准化到x’的计算方法是：<br>x’=x/(10^j)<br>其中，j是满足条件的最小整数。</p>
</blockquote>
<p>例如 假定A的值由-986到917，A的最大绝对值为986，为使用小数定标标准化，我们用每个值除以1000（即，j=3），这样，-986被规范化为-0.986。</p>
<h1 id="数据标准化的另一个用处"><a href="#数据标准化的另一个用处" class="headerlink" title="数据标准化的另一个用处"></a>数据标准化的另一个用处</h1><blockquote>
<p>参考文章：<a href="http://www.datasoldier.net/post/standard.html" target="_blank" rel="external">数据的标准化处理及实际应用</a></p>
</blockquote>
<p>比如我们有这样一份数据，学生的一份综合评分数据<br><img src="http://upload-images.jianshu.io/upload_images/76024-befe0fcc23970979.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们可以看到学生的一个分布情况，但这个分数不是标准的100分制，不是很直观，我们就可以利用数据标准化进行转换<br>我们就是用Max-Min标准化方法<br><img src="http://upload-images.jianshu.io/upload_images/76024-c468cbd165c06c50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-da3a092118cf04db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p>参考文章：</p>
<ul>
<li><p><a href="http://www.wangxianfeng.name/2012/09/commonly-used-data-standardization-method/" target="_blank" rel="external">常用的数据标准化方法</a></p>
</li>
<li><p>定义及描述参考百度百科等</p>
</li>
<li><a href="http://www.datasoldier.net/post/standard.html" target="_blank" rel="external">数据的标准化处理及实际应用</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是数据标准化&quot;&gt;&lt;a href=&quot;#什么是数据标准化&quot; class=&quot;headerlink&quot; title=&quot;什么是数据标准化&quot;&gt;&lt;/a&gt;什么是数据标准化&lt;/h1&gt;&lt;p&gt;我们平时分析一个指标的时候，或者对比数据的时候可能都有单位，比如身高（cm）,体重（Kg），如果我们想要对这2个指标进行综合分析的话，就需要让指标脱离单位的限制，这应该就是数据标准化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from 互动百科&lt;br&gt;数据的标准化（normalization）是将数据按比例缩放，使之落入一个小的特定区间。在某些比较和评价的指标处理中经常会用到，去除数据的单位限制，将其转化为无量纲的纯数值，便于不同单位或量级的指标能够进行比较和加权。其中最典型的就是0-1标准化和Z标准化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;为什么要进行数据标准化&quot;&gt;&lt;a href=&quot;#为什么要进行数据标准化&quot; class=&quot;headerlink&quot; title=&quot;为什么要进行数据标准化&quot;&gt;&lt;/a&gt;为什么要进行数据标准化&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;from 百度百科&lt;br&gt;评价是现代社会各领域的一项经常性的工作，是科学做出管理决策的重要依据。随着人们研究领域的不断扩大，所面临的评价对象日趋复杂，如果仅依据单一指标对事物进行评价往往不尽合理，必须全面地从整体的角度考虑问题，多指标综合评价方法应运而生。所谓多指标综合评价方法，就是把描述评价对象不同方面的多个指标的信息综合起来，并得到一个综合指标，由此对评价对象做一个整体上的评判，并进行横向或纵向比较。&lt;br&gt;而在多指标评价体系中，由于各评价指标的性质不同，通常具有不同的量纲和数量级。当各指标间的水平相差很大时，如果直接用原始指标值进行分析，就会突出数值较高的指标在综合分析中的作用，相对削弱数值水平较低指标的作用。因此，为了保证结果的可靠性，需要对原始指标数据进行标准化处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小例子(来源见附录)：&lt;br&gt;假设对3名新生婴儿体重（5，6，7）和3名成年人的体重（150，151，152）差异的大小进行对比分析，从表面上看，两组人员的平均差异均为1斤，由此便得出两组人员的体重差异程度相同显然是不合适，因为两者的体重水平不在同一等级上，即量纲不同；&lt;/p&gt;
    
    </summary>
    
      <category term="统计知识" scheme="https://yuguiyang.github.io/categories/%E7%BB%9F%E8%AE%A1%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="统计" scheme="https://yuguiyang.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-排序再记</title>
    <link href="https://yuguiyang.github.io/2017/10/29/mysql-handbook-16/"/>
    <id>https://yuguiyang.github.io/2017/10/29/mysql-handbook-16/</id>
    <published>2017-10-29T04:00:00.000Z</published>
    <updated>2017-10-29T05:53:13.955Z</updated>
    
    <content type="html"><![CDATA[<p>这里整理下在MySQL中排序的方法</p>
<blockquote>
<p>我就记得在哪儿写过，刚刚一直没找着，就又整理了一下，后来找到了，坑<br>之前的博客：<a href="https://yuguiyang.github.io/2017/09/09/mysql-handbook-05/">MySQL-分组排序</a></p>
</blockquote>
<h1 id="序号"><a href="#序号" class="headerlink" title="序号"></a>序号</h1><p>在MySQL中，没有什么row_number()，rank() 之类的开窗函数，我们想要显示数据行号的话，要使用变量来手动排序<br>关于变量可以参考之前的博客：<a href="https://yuguiyang.github.io/2017/09/10/mysql-handbook-07/">MySQL-变量的使用</a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> @r:= <span class="number">0</span>;</div><div class="line"><span class="keyword">select</span> @r,@r:=@r+<span class="number">1</span>,@r:=@r+<span class="number">1</span></div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-73af546d7c86abaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这里呢，我们先使用set对@r变量进行了初始化，不初始化的话，变量默认为NULL，<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> @r:= <span class="number">0</span>;</div><div class="line"><span class="keyword">select</span> @r,@r:=@r+<span class="number">1</span>,@r:=@r+<span class="number">1</span>,@k,@k:=@k+<span class="number">2</span></div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-2a3fad4a21a914b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<a id="more"></a>
<p>因为我们使用的用户自定义变量，只在当前会话窗口有效,换个窗口就不行了；同样的，如果不初始化为0，他会继续使用上次的值</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-e3ae8cc59cbd1b46.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>所以，我们要给数据显示序号的话，就需要使用这个变量<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> </div><div class="line">  a.*,</div><div class="line">  @row_num:=@row_num+<span class="number">1</span> <span class="keyword">as</span> row_num </div><div class="line"><span class="keyword">from</span> </div><div class="line">  t_student a , (<span class="keyword">select</span> @row_num:=<span class="number">0</span>) b  </div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> </div><div class="line">  s_id</div></pre></td></tr></table></figure></p>
<p>我们在表b中初始化序号变量，表a表b没有关联关系，直接产生笛卡尔积，因为记录是按行返回的，所以每行记录都会产生一个序号，每行记录按照@row_num:=@row_num+1进行赋值<br>这里就和SQL的执行顺序有关，要好好领会一下</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-a3b2b70b4c33f48e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>用下面的方式也可以<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> @row_num:=<span class="number">0</span>;</div><div class="line"><span class="keyword">select</span> </div><div class="line">  a.*,</div><div class="line">  @row_num:=@row_num+<span class="number">1</span> <span class="keyword">as</span> row_num </div><div class="line"><span class="keyword">from</span> </div><div class="line">  t_student a </div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> </div><div class="line">  s_id</div></pre></td></tr></table></figure></p>
<h1 id="分组排序"><a href="#分组排序" class="headerlink" title="分组排序"></a>分组排序</h1><p>上面，我们就简单的实现了序号，有时候，我们需要实现更复杂的分组排序<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">set</span> @row_num:=<span class="number">1</span>;</div><div class="line"><span class="keyword">set</span> @pre_c_id:=<span class="literal">null</span>;</div><div class="line"><span class="keyword">select</span> </div><div class="line">  a.*,</div><div class="line">  <span class="keyword">if</span>(@pre_c_id=c_id,@row_num:=@row_num+<span class="number">1</span>,@row_num:=<span class="number">1</span>) <span class="keyword">as</span> row_num,</div><div class="line">  @pre_c_id:=c_id</div><div class="line">  <span class="comment">-- @row_num:=@row_num+1 as row_num </span></div><div class="line"><span class="keyword">from</span> </div><div class="line">  t_student a </div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> </div><div class="line">  c_id,s_id</div></pre></td></tr></table></figure></p>
<p>因为我们要看分组的序号，所以，我们得知道当前记录的c_id和上一条记录的c_id是否一样，一样继续序号，不一样，就要重新开始编号了。<br>后面就参考前面的文章吧。<br><a href="https://yuguiyang.github.io/2017/09/09/mysql-handbook-05/">MySQL-分组排序</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里整理下在MySQL中排序的方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我就记得在哪儿写过，刚刚一直没找着，就又整理了一下，后来找到了，坑&lt;br&gt;之前的博客：&lt;a href=&quot;https://yuguiyang.github.io/2017/09/09/mysql-handbook-05/&quot;&gt;MySQL-分组排序&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;序号&quot;&gt;&lt;a href=&quot;#序号&quot; class=&quot;headerlink&quot; title=&quot;序号&quot;&gt;&lt;/a&gt;序号&lt;/h1&gt;&lt;p&gt;在MySQL中，没有什么row_number()，rank() 之类的开窗函数，我们想要显示数据行号的话，要使用变量来手动排序&lt;br&gt;关于变量可以参考之前的博客：&lt;a href=&quot;https://yuguiyang.github.io/2017/09/10/mysql-handbook-07/&quot;&gt;MySQL-变量的使用&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; @r:= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; @r,@r:=@r+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,@r:=@r+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-73af546d7c86abaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里呢，我们先使用set对@r变量进行了初始化，不初始化的话，变量默认为NULL，&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; @r:= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; @r,@r:=@r+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,@r:=@r+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,@k,@k:=@k+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-2a3fad4a21a914b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/categories/MySQL/"/>
    
    
      <category term="SQL" scheme="https://yuguiyang.github.io/tags/SQL/"/>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-获取前10%数据</title>
    <link href="https://yuguiyang.github.io/2017/10/29/mysql-handbook-15/"/>
    <id>https://yuguiyang.github.io/2017/10/29/mysql-handbook-15/</id>
    <published>2017-10-29T02:00:00.000Z</published>
    <updated>2017-10-29T04:30:08.285Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录一个问题</p>
<p>在MySQL中，我们要查看前3条记录的话，是使用limit<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> *<span class="keyword">from</span> t_student <span class="keyword">order</span> <span class="keyword">by</span> s_id <span class="keyword">limit</span> <span class="number">3</span>;</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-841842e9c09b99e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>简单的分页也可以使用力limit来完成<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> *<span class="keyword">from</span> t_student <span class="keyword">order</span> <span class="keyword">by</span> s_id <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">3</span>;</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-c250d91456ec6915.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这都比较常见，如果我们想要获取数据的前10%呢？</p>
<a id="more"></a>
<p>在SQLServer中，我们可以直接使用top  10 percent 就可以了，但在MySQL中，我们得另想办法<br>前10%的数据，我们得知道数据一共有多少，那我们就知道该获取多少条记录了，然后还得知道记录的行号。</p>
<ul>
<li>记录行号<br>在MySQL中，获取行号，要使用变量<br>可以参考之前的文章：<br><a href="https://yuguiyang.github.io/2017/09/10/mysql-handbook-07/">MySQL-变量的使用</a><br><a href="https://yuguiyang.github.io/2017/10/29/mysql-handbook-16/">MySQL-排序</a></li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> </div><div class="line">  a.*,</div><div class="line">  @row_num:=@row_num+<span class="number">1</span> <span class="keyword">as</span> row_num </div><div class="line"><span class="keyword">from</span> </div><div class="line">  t_student a , (<span class="keyword">select</span> @row_num:=<span class="number">0</span>) b  </div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> </div><div class="line">  s_id</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-99ab1c98e1f0f879.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>前10%<br>有了行号，我们就可以根据行号和总记录数来过滤了，我们数据少，就看前50%的<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> *<span class="keyword">from</span> (</div><div class="line">  <span class="keyword">select</span> </div><div class="line">    a.*,</div><div class="line">    @row_num:=@row_num+<span class="number">1</span> <span class="keyword">as</span> row_num </div><div class="line">  <span class="keyword">from</span> </div><div class="line">    t_student a , (<span class="keyword">select</span> @row_num:=<span class="number">0</span>) b  </div><div class="line">  <span class="keyword">order</span> <span class="keyword">by</span> </div><div class="line">    s_id</div><div class="line">) base</div><div class="line"><span class="keyword">where</span> </div><div class="line">  base.row_num &lt;= (@row_num*<span class="number">0.5</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-1ded0675d2e06e5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>@row_num这个变量，是按行来的，所以我们再where条件中使用的时候，他是最后1条记录的行号，及总记录数<br>总记录数乘以50%，就是前50%的记录数，这样，我们就获取了前X%数据，做完收工。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里记录一个问题&lt;/p&gt;
&lt;p&gt;在MySQL中，我们要查看前3条记录的话，是使用limit&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; t_student &lt;span class=&quot;keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; s_id &lt;span class=&quot;keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-841842e9c09b99e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;简单的分页也可以使用力limit来完成&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; t_student &lt;span class=&quot;keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; s_id &lt;span class=&quot;keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-c250d91456ec6915.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这都比较常见，如果我们想要获取数据的前10%呢？&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/categories/MySQL/"/>
    
    
      <category term="SQL" scheme="https://yuguiyang.github.io/tags/SQL/"/>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>常见图表-柱形图</title>
    <link href="https://yuguiyang.github.io/2017/10/28/statistics-handbook-04/"/>
    <id>https://yuguiyang.github.io/2017/10/28/statistics-handbook-04/</id>
    <published>2017-10-28T12:08:00.000Z</published>
    <updated>2017-10-28T15:47:16.042Z</updated>
    
    <content type="html"><![CDATA[<p>常见图表介绍及实例</p>
<blockquote>
<p>本篇为阅读笔记《数据化运营速成手册》</p>
</blockquote>
<p>柱形图是我们非常常用的一种图表，竖着放叫柱形图，横着放就是条形图，把柱子分割成几块就成了累加柱形图，柱形图的目的就是为了对比，下面从几个方面介绍下柱形图的使用。</p>
<h1 id="利用累加柱形图对比数据结构的变化"><a href="#利用累加柱形图对比数据结构的变化" class="headerlink" title="利用累加柱形图对比数据结构的变化"></a>利用累加柱形图对比数据结构的变化</h1><p>累加柱形图，可能也叫堆叠柱状图，像这样：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-d51775b392140541.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图的例子是说一家公司运营策略的改变前后，运营成本的对比图，通过累加柱形图，非常直观的表现出各个部分成本的变化。</p>
<p>我们可以快速得到一些信息：</p>
<ul>
<li>公司运营成本有显著下降</li>
<li>公司运营思路有重大调整原来重挽回，现在重拉新和促活</li>
<li>基础成本有所下降</li>
</ul>
<a id="more"></a>
<h1 id="多指标组合对比"><a href="#多指标组合对比" class="headerlink" title="多指标组合对比"></a>多指标组合对比</h1><p>当我们想要在多个指标上进行对比时，像这样查看新签约数和续约数2个指标，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-f3a46b69f95b7533.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这里使用要注意，分组数据不能太多，如果有10个部门，就不会表达出台清晰的观点；<br>那我们就可以使用条形图，分开查看单个指标。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-6c7d3ac38334c452.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这个还不是最直观的，我们可以用均值，把他改成双向条形图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-792887327f4f9b95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>这样更直观一些<br>上图，我们将每组数据都减去平均值，然后就形成了正负的数据，优劣显示非常明显<br>（<br>Excel里这个图，那个标签的位置，一直没找到让他显示在左边，找了好久</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-118261db89d4dadd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见图表介绍及实例&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本篇为阅读笔记《数据化运营速成手册》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;柱形图是我们非常常用的一种图表，竖着放叫柱形图，横着放就是条形图，把柱子分割成几块就成了累加柱形图，柱形图的目的就是为了对比，下面从几个方面介绍下柱形图的使用。&lt;/p&gt;
&lt;h1 id=&quot;利用累加柱形图对比数据结构的变化&quot;&gt;&lt;a href=&quot;#利用累加柱形图对比数据结构的变化&quot; class=&quot;headerlink&quot; title=&quot;利用累加柱形图对比数据结构的变化&quot;&gt;&lt;/a&gt;利用累加柱形图对比数据结构的变化&lt;/h1&gt;&lt;p&gt;累加柱形图，可能也叫堆叠柱状图，像这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-d51775b392140541.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图的例子是说一家公司运营策略的改变前后，运营成本的对比图，通过累加柱形图，非常直观的表现出各个部分成本的变化。&lt;/p&gt;
&lt;p&gt;我们可以快速得到一些信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公司运营成本有显著下降&lt;/li&gt;
&lt;li&gt;公司运营思路有重大调整原来重挽回，现在重拉新和促活&lt;/li&gt;
&lt;li&gt;基础成本有所下降&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="统计知识" scheme="https://yuguiyang.github.io/categories/%E7%BB%9F%E8%AE%A1%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="统计" scheme="https://yuguiyang.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记-数据化运营(2章）</title>
    <link href="https://yuguiyang.github.io/2017/10/28/reading_notes_data_analysis_04/"/>
    <id>https://yuguiyang.github.io/2017/10/28/reading_notes_data_analysis_04/</id>
    <published>2017-10-28T04:00:00.000Z</published>
    <updated>2017-10-28T15:12:50.592Z</updated>
    
    <content type="html"><![CDATA[<p>读书笔记<br>数据化运营速成手册<br>第二章</p>
<p>第二章主要是介绍图表的使用，这里的笔记就分开整理了这里做一个总的目录，随时补充</p>
<h2 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h2><p><a href="https://yuguiyang.github.io/2017/10/28/statistics-handbook-03/">常见图表-散点图</a></p>
<h2 id="柱形图"><a href="#柱形图" class="headerlink" title="柱形图"></a>柱形图</h2><p><a href="https://yuguiyang.github.io/2017/10/28/statistics-handbook-04/">常见图表-柱形图</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;读书笔记&lt;br&gt;数据化运营速成手册&lt;br&gt;第二章&lt;/p&gt;
&lt;p&gt;第二章主要是介绍图表的使用，这里的笔记就分开整理了这里做一个总的目录，随时补充&lt;/p&gt;
&lt;h2 id=&quot;散点图&quot;&gt;&lt;a href=&quot;#散点图&quot; class=&quot;headerlink&quot; title=&quot;散点图&quot;&gt;&lt;/
    
    </summary>
    
      <category term="读书笔记" scheme="https://yuguiyang.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数据分析" scheme="https://yuguiyang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="读书笔记" scheme="https://yuguiyang.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="实例" scheme="https://yuguiyang.github.io/tags/%E5%AE%9E%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>常见图表-散点图</title>
    <link href="https://yuguiyang.github.io/2017/10/28/statistics-handbook-03/"/>
    <id>https://yuguiyang.github.io/2017/10/28/statistics-handbook-03/</id>
    <published>2017-10-28T00:08:00.000Z</published>
    <updated>2017-10-28T13:22:07.914Z</updated>
    
    <content type="html"><![CDATA[<p>常见图表介绍及实例</p>
<blockquote>
<p>发现一篇文档讲的很好，这里基本都是摘录，原文请参见附录</p>
</blockquote>
<h1 id="什么是散点图"><a href="#什么是散点图" class="headerlink" title="什么是散点图"></a>什么是散点图</h1><blockquote>
<p>散点图也叫 X-Y 图，它将所有的数据以点的形式展现在直角坐标系上，以显示变量之间的相互影响程度，点的位置由变量的数值决定。</p>
</blockquote>
<p>通过观察散点图上数据点的分布情况，我们可以推断出变量间的相关性。如果变量之间不存在相互关系，那么在散点图上就会表现为随机分布的离散的点，如果存在某种相关性，那么大部分的数据点就会相对密集并以某种趋势呈现。数据的相关关系主要分为：正相关（两个变量值同时增长）、负相关（一个变量值增加另一个变量值下降）、不相关、线性相关、指数相关等，表现在散点图上的大致分布如下图所示。那些离点集群较远的点我们称为离群点或者异常点。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-a2e031b1185c53d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<a id="more"></a>
<p>散点图经常与回归线（就是最准确地贯穿所有点的线）结合使用，归纳分析现有数据以进行预测分析。</p>
<p>对于那些变量之间存在密切关系，但是这些关系又不像数学公式和物理公式那样能够精确表达的，散点图是一种很好的图形工具。但是在分析过程中需要注意，这两个变量之间的相关性并不等同于确定的因果关系，也可能需要考虑其他的影响因素。</p>
<p>英文名：Scatter graph, Point graph, X-Y plot, Scatter chart or Scattergram</p>
<h1 id="散点图应用场景"><a href="#散点图应用场景" class="headerlink" title="散点图应用场景"></a>散点图应用场景</h1><p>散点图通常用于显示和比较数值，不光可以显示趋势，还能显示数据集群的形状，以及在数据云团中各数据点的关系。</p>
<p>常见的是身高和体重的数据<br>从网上找一份身高体重的数据，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-367acc3d7ef157a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>然后，我们选中身高和体重，插入一个散点图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-0e2cca73eff5ab7d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>通过观察，很容易发现，身高和体重是正相关的，而且是线性相关，及身高越高，体重越重</p>
<p>我们可以添加趋势线，并显示公式<br><img src="http://upload-images.jianshu.io/upload_images/76024-01e40726cea87f9f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>当然，我们还可以在添加一个性别维度去看</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-8fa3f6dcea89d61c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这里我们要分别选择数据源，在Excel中，需要先制作男生的散点图，然后添加数据源，增加列，然后使用不同的图形表示就好了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-eed4ff69c686a986.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>好了，上面，我们简单了解了散点图，知道在Excel中简单制作散点图了，先到这里。</p>
<h1 id="散点图的变形-气泡图"><a href="#散点图的变形-气泡图" class="headerlink" title="散点图的变形-气泡图"></a>散点图的变形-气泡图</h1><p>上面的散点图，只有2个变量，身高和体重，那如果我们想要再增加变量呢？比如说年龄，我们就可以用点的大小来表示年龄，这就变成了有大有小的点，像气泡一样，所以叫气泡图。<br><img src="http://upload-images.jianshu.io/upload_images/76024-434fd31f3c61785a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这里主要是在Excel中，选择不同的数据源即可，我们用年龄来控制大小<br><img src="http://upload-images.jianshu.io/upload_images/76024-884ebb6ee9ac5a64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-f9b1862d0d490a2e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="散点图的变形-分类矩阵"><a href="#散点图的变形-分类矩阵" class="headerlink" title="散点图的变形-分类矩阵"></a>散点图的变形-分类矩阵</h1><p>我们在绘制了散点图之后，通过添加辅助线可以进行决策，类似于波士顿矩阵</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-8b2aaaad0abbbff8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这主要是一种投资策略，通过这个图，可以快速的了解每种产品所处的价值区间，在Excel中，我们也可以简单的模拟这种图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-9e479c7e7daf8643.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图是通过在数据区，填充了一个图片完成的，这里主要是要设置不同区间的阈值，这需要深入了解业务。</p>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p>以上内容参考: <a href="https://antv.alipay.com/vis/doc/chart/details/scatter-plot.html" target="_blank" rel="external">https://antv.alipay.com/vis/doc/chart/details/scatter-plot.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见图表介绍及实例&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;发现一篇文档讲的很好，这里基本都是摘录，原文请参见附录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;什么是散点图&quot;&gt;&lt;a href=&quot;#什么是散点图&quot; class=&quot;headerlink&quot; title=&quot;什么是散点图&quot;&gt;&lt;/a&gt;什么是散点图&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;散点图也叫 X-Y 图，它将所有的数据以点的形式展现在直角坐标系上，以显示变量之间的相互影响程度，点的位置由变量的数值决定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过观察散点图上数据点的分布情况，我们可以推断出变量间的相关性。如果变量之间不存在相互关系，那么在散点图上就会表现为随机分布的离散的点，如果存在某种相关性，那么大部分的数据点就会相对密集并以某种趋势呈现。数据的相关关系主要分为：正相关（两个变量值同时增长）、负相关（一个变量值增加另一个变量值下降）、不相关、线性相关、指数相关等，表现在散点图上的大致分布如下图所示。那些离点集群较远的点我们称为离群点或者异常点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-a2e031b1185c53d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="统计知识" scheme="https://yuguiyang.github.io/categories/%E7%BB%9F%E8%AE%A1%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="统计" scheme="https://yuguiyang.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记-数据化运营(1章）</title>
    <link href="https://yuguiyang.github.io/2017/10/27/reading_notes_data_analysis_03/"/>
    <id>https://yuguiyang.github.io/2017/10/27/reading_notes_data_analysis_03/</id>
    <published>2017-10-27T04:00:00.000Z</published>
    <updated>2017-10-27T09:22:01.331Z</updated>
    
    <content type="html"><![CDATA[<p>读书笔记<br>数据化运营速成手册<br>第一章</p>
<blockquote>
<p>这本书，大概翻了一遍，感觉还不错，作者结合自身经验从实际问题角度出发给我们介绍了数据化运营、数据分析，书中图表、分析模型都是基于Excel的，不需要学习其他的工具，对于我们上手来说很简单。后面就让我们跟随作者的脚步，一步一步来学习下。</p>
</blockquote>
<p>对于数据分析、数据化运营来说，最终的表现形式可能是一份数据分析报告，都说“字不如表，表不如图”，所以报告中可能会是各种图表，然而，是不是所有的报告或者需求都需要使用图表呢？这是我们首先要判断的问题。</p>
<h1 id="真的要做图吗？"><a href="#真的要做图吗？" class="headerlink" title="真的要做图吗？"></a>真的要做图吗？</h1><p>我们拿到一个需求，面对收集好的数据，我们首先要思考的是：真的要做图吗？<br>有时候，文字报告或者一个表格的表达效果会比图表好得多。<br>我们最终的目的，其实是准确传达信息或者解决业务方的疑问，不要盲目的认为图表一定是最好的。</p>
<ul>
<li>短期内了解性需求<br>一些临时性的了解某个指标实际情况的需求：“近一个月的日活、上个月的支出”，我们只要提供准确的数据就好了。</li>
<li>多维度相互组合的需求<br>这里说的就是指标涉及的维度比较多，用图表没有办法准确的传达信息，作者有举一个具体的例子:<blockquote>
<p>老板说他想看上个月各个城市中VIP客户和非VIP客户数量的对比和同比上上月的情况。</p>
</blockquote>
</li>
</ul>
<p>基础数据是这样的<br><img src="http://upload-images.jianshu.io/upload_images/76024-46e93f4cc19defb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>转化成图表可能会是这样，图看上去还不错<br><img src="http://upload-images.jianshu.io/upload_images/76024-1fbf0a3c87784de8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>上面的折线图用的不太妥，折线图一般可能用在时间序列上或者具有演进关系的，而地区之间并没有这种演进关系，当然，我们可以改一下图表：</p>
<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-84ed7d36adb63d83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这样虽然满足了，但是图的效果差些，而且，如果老板又要增加一个VIP用户占比情况，图表就没法好好表达了，所以，最直接的，我们就是使用一个表格来展现数据</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-7b16315088c01213.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>当然，可以再好看些，像这样：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-a2e1c306c3ea2660.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li><p>图表传达的信息有限<br>我们要用正确的图表表达正确的理念，每种图表都有他擅长表达的领域；如果一些观点不能用图表完全表达出来，一定要放弃使用图表</p>
</li>
<li><p>数据间存在复杂逻辑<br>这里说的其实也是不能用图表完全表达观点的情况，有时候，数据集之间可能互相影响，互为因果，这里作者举了一个用户行为路径转化的例子</p>
</li>
</ul>
<h1 id="图表的基本构成"><a href="#图表的基本构成" class="headerlink" title="图表的基本构成"></a>图表的基本构成</h1><p>排除上面几种情况，最后确定要做图表的话，我们就要了解图表的基本特征，这里作者主要介绍了图表的基本元素</p>
<ul>
<li>坐标轴</li>
<li>图例的位置</li>
<li>辅助线</li>
<li>数据标签等等<br>这里就不详细介绍了，后面，我们再具体的图标中，再介绍</li>
</ul>
<h1 id="控制图标中的信息量"><a href="#控制图标中的信息量" class="headerlink" title="控制图标中的信息量"></a>控制图标中的信息量</h1><p>在最开始，我们就要注意，图标中表达的内容一定要直观，简单，不要融合太多的指标，指标多了以后，就会产生混淆，产生误解。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;读书笔记&lt;br&gt;数据化运营速成手册&lt;br&gt;第一章&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这本书，大概翻了一遍，感觉还不错，作者结合自身经验从实际问题角度出发给我们介绍了数据化运营、数据分析，书中图表、分析模型都是基于Excel的，不需要学习其他的工具，对于我们上手来说很简单。后面就让我们跟随作者的脚步，一步一步来学习下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于数据分析、数据化运营来说，最终的表现形式可能是一份数据分析报告，都说“字不如表，表不如图”，所以报告中可能会是各种图表，然而，是不是所有的报告或者需求都需要使用图表呢？这是我们首先要判断的问题。&lt;/p&gt;
&lt;h1 id=&quot;真的要做图吗？&quot;&gt;&lt;a href=&quot;#真的要做图吗？&quot; class=&quot;headerlink&quot; title=&quot;真的要做图吗？&quot;&gt;&lt;/a&gt;真的要做图吗？&lt;/h1&gt;&lt;p&gt;我们拿到一个需求，面对收集好的数据，我们首先要思考的是：真的要做图吗？&lt;br&gt;有时候，文字报告或者一个表格的表达效果会比图表好得多。&lt;br&gt;我们最终的目的，其实是准确传达信息或者解决业务方的疑问，不要盲目的认为图表一定是最好的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;短期内了解性需求&lt;br&gt;一些临时性的了解某个指标实际情况的需求：“近一个月的日活、上个月的支出”，我们只要提供准确的数据就好了。&lt;/li&gt;
&lt;li&gt;多维度相互组合的需求&lt;br&gt;这里说的就是指标涉及的维度比较多，用图表没有办法准确的传达信息，作者有举一个具体的例子:&lt;blockquote&gt;
&lt;p&gt;老板说他想看上个月各个城市中VIP客户和非VIP客户数量的对比和同比上上月的情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基础数据是这样的&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-46e93f4cc19defb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;转化成图表可能会是这样，图看上去还不错&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-1fbf0a3c87784de8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;上面的折线图用的不太妥，折线图一般可能用在时间序列上或者具有演进关系的，而地区之间并没有这种演进关系，当然，我们可以改一下图表：&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://yuguiyang.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数据分析" scheme="https://yuguiyang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="读书笔记" scheme="https://yuguiyang.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="实例" scheme="https://yuguiyang.github.io/tags/%E5%AE%9E%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>常见图表-直方图</title>
    <link href="https://yuguiyang.github.io/2017/10/25/statistics-handbook-02/"/>
    <id>https://yuguiyang.github.io/2017/10/25/statistics-handbook-02/</id>
    <published>2017-10-25T00:08:00.000Z</published>
    <updated>2017-10-25T08:52:55.525Z</updated>
    
    <content type="html"><![CDATA[<p>常见图表介绍及实例</p>
<h1 id="什么是直方图"><a href="#什么是直方图" class="headerlink" title="什么是直方图"></a>什么是直方图</h1><blockquote>
<p>直方图(Histogram)又称质量分布图。是一种统计报告图，由一系列高度不等的纵向条纹或线段表示数据分布的情况。 一般用横轴表示数据类型，纵轴表示分布情况。<br>为了构建直方图，第一步是将值的范围分段，即将整个值的范围分成一系列间隔，然后计算每个间隔中有多少值。 这些值通常被指定为连续的，不重叠的变量间隔。 间隔必须相邻，并且通常是（但不是必须的）相等的大小。</p>
</blockquote>
<p>直方图一开始可能是应用在工业生产领域，来做质量评估，判断生产稳定性</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-673fd45d90156bd9.gif?imageMogr2/auto-orient/strip" alt=""></p>
<p>组数：在统计数据时，我们把数据按照不同的范围分成几个组，分成的组的个数称为组数。<br>组距：每一组两个端点的差。</p>
<h1 id="作用（优势）"><a href="#作用（优势）" class="headerlink" title="作用（优势）"></a>作用（优势）</h1><ol>
<li>显示数据波动状态</li>
<li>直观的表达数据分布趋势</li>
<li>方便找到应该关注的点</li>
</ol>
<a id="more"></a>
<h1 id="绘制方法"><a href="#绘制方法" class="headerlink" title="绘制方法"></a>绘制方法</h1><p>– from 百度百科</p>
<p>①集中和记录数据，求出其最大值和最小值。数据的数量应在100个以上，在数量不多的情况下，至少也应在         50个以上。 我们把分成组的个数称为组数，每一个组的两个端点的差称为组距。<br>②将数据分成若干组，并做好记号。分组的数量在5－12之间较为适宜。<br>③计算组距的宽度。用最大值和最小值之差去除组数，求出组距的宽度。<br>④计算各组的界限位。各组的界限位可以从第一组开始依次计算，第一组的下界为最小值减去最小测定单位的一半，第一组的上界为其下界值加上组距。第二组的下界限位为第一组的上界限值，第二组的下界限值加上组距，就是第二组的上界限位，依此类推。<br>⑤统计各组数据出现频数，作频数分布表。<br>⑥作直方图。以组距为底长，以频数为高，作各组的矩形图。</p>
<h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><p>假设我们有公司所有部门的KPI完成情况，如下图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-9ae8bd35e6cc7140.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们想要了解公司的整体运营情况，用图表来看会更直观，这就正好用上了直方图，来看公司在每一个区间的分布情况；<br>我们以0.3为组距，分成5个组（数据是随机生成的，貌似有点儿不太靠谱，如果公司的KPI完成率是这样，我觉得KPI定义会稍微有问题，基本上都没达标啊）<br><img src="http://upload-images.jianshu.io/upload_images/76024-2cb9c3bed14311a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="概率分布表"></p>
<p>然后，我们在Excel中，创建一个图表，就可以直观的看到KPI的完成情况分布了<br><img src="http://upload-images.jianshu.io/upload_images/76024-774323cd1e2e0e48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="直方图"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见图表介绍及实例&lt;/p&gt;
&lt;h1 id=&quot;什么是直方图&quot;&gt;&lt;a href=&quot;#什么是直方图&quot; class=&quot;headerlink&quot; title=&quot;什么是直方图&quot;&gt;&lt;/a&gt;什么是直方图&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;直方图(Histogram)又称质量分布图。是一种统计报告图，由一系列高度不等的纵向条纹或线段表示数据分布的情况。 一般用横轴表示数据类型，纵轴表示分布情况。&lt;br&gt;为了构建直方图，第一步是将值的范围分段，即将整个值的范围分成一系列间隔，然后计算每个间隔中有多少值。 这些值通常被指定为连续的，不重叠的变量间隔。 间隔必须相邻，并且通常是（但不是必须的）相等的大小。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直方图一开始可能是应用在工业生产领域，来做质量评估，判断生产稳定性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-673fd45d90156bd9.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;组数：在统计数据时，我们把数据按照不同的范围分成几个组，分成的组的个数称为组数。&lt;br&gt;组距：每一组两个端点的差。&lt;/p&gt;
&lt;h1 id=&quot;作用（优势）&quot;&gt;&lt;a href=&quot;#作用（优势）&quot; class=&quot;headerlink&quot; title=&quot;作用（优势）&quot;&gt;&lt;/a&gt;作用（优势）&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;显示数据波动状态&lt;/li&gt;
&lt;li&gt;直观的表达数据分布趋势&lt;/li&gt;
&lt;li&gt;方便找到应该关注的点&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="统计知识" scheme="https://yuguiyang.github.io/categories/%E7%BB%9F%E8%AE%A1%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="统计" scheme="https://yuguiyang.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>平均数小记</title>
    <link href="https://yuguiyang.github.io/2017/10/24/statistics-handbook-01/"/>
    <id>https://yuguiyang.github.io/2017/10/24/statistics-handbook-01/</id>
    <published>2017-10-24T00:08:00.000Z</published>
    <updated>2017-10-25T08:53:53.382Z</updated>
    
    <content type="html"><![CDATA[<p>我们日常生活中，经常会遇到平均数像什么平均工资，平均身高，平均成绩之类的，曾经在课上学习的相关知识估计早就忘记了，这里我们就来回顾下。<br>(下面部分介绍及例子摘自百度百科)</p>
<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="算术平均数-arithmetic-mean"><a href="#算术平均数-arithmetic-mean" class="headerlink" title="算术平均数(arithmetic mean)"></a>算术平均数(arithmetic mean)</h2><p>通常我们说的平均数都是“算术平均数”：平均成绩、平均身高、平均收入…</p>
<blockquote>
<p>一组数据中所有数据之和再除以这组数据的个数，他反映一组数据的集中趋势<br>– 百度百科</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-0f0afbe9f2d811df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="from 百度百科"></p>
<h3 id="加权算术平均数"><a href="#加权算术平均数" class="headerlink" title="加权算术平均数"></a>加权算术平均数</h3><blockquote>
<p>加权平均值即将各数值乘以相应的权数，然后加总求和得到总体值，再除以总的单位数。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-2bc427421fad2046.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="from baidu"></p>
<p>这个表示每个数据都有一个权重，也比较常见，比如：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-727c31056126d50f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="from baidu"></p>
<p>通常我们再绩效考核中，有自评、领导评价，领导的评价一般权重较高，</p>
<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-09f036256f6cb8f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>最后的84分（<code>90*40%+80*60%</code>）是本月的绩效评分</p>
<h2 id="中位数-median"><a href="#中位数-median" class="headerlink" title="中位数(median)"></a>中位数(median)</h2><blockquote>
<p>中位数是指将数据按大小顺序排列起来，形成一个数列，居于数列中间位置的那个数据</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-315576ace88b73b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="from 百度百科"></p>
<p>当一组数据中有极端值时，”中位数”比“算术平均数”可以更好的表示平均水平<br>下面是一组学生的数学成绩，看“算术平均数”的话，平均分是63勉强超过了及格线，看上去可能还好，但实际上呢？这组学生大部分人都没有及格，都在50分一下，是因为有2名学生考了100分，整体拉高了平均成绩；<br>而中位数就就49分，已经大大低于60分了，可以更直观的表现该组学生的一个整体成绩，还需要多多关注数学的学习。<br><img src="http://upload-images.jianshu.io/upload_images/76024-26878d65f53bcfbc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这就比较类似“被平均”的情况，光看平均分是及格了，但实际上，大多数学生并没有好好的掌握这次数学考试的内容，普通的学生被2个学霸平均了。</p>
<p>就平均收入来说，新闻上经常会出现哪个城市的平均工资是多少，同比增长了多少，每次看到这样的数据，都会觉得自己拖了后腿。首先社会财富的分配本身就不是均匀的，根据二八定律，社会上20%的人掌握着80%的财富，一平均数据很好看，而实际上贫富分化依然很严重。</p>
<h2 id="众数"><a href="#众数" class="headerlink" title="众数"></a>众数</h2><blockquote>
<p>众数是指一组数据中出现次数最多的那个数据，一组数据可以有多个众数，也可以没有众数。</p>
</blockquote>
<p>以上面成绩的数据为例，众数就是100，他代表了这组数据的一个峰值，对于我们想看整体情况，没有太多参考意义。</p>
<p>在其他一些场景下，智库百科上有这样一个例子：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-f7a2cafe98faed50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>从表中可以看到，25.5厘米的鞋号销售量最多，如果我们计算算术平均数，则平均号码为25.65厘米，而这个号码显然是没有实际意义的，而直接用25.5厘米作为顾客对男皮鞋所需尺寸的集中趋势既便捷又符合实际。 </p>
</blockquote>
<h2 id="几何平均数"><a href="#几何平均数" class="headerlink" title="几何平均数"></a>几何平均数</h2><blockquote>
<p>几何平均数是n个变量值连乘积的n次方根</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-71f3f14354b87080.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="from 百度百科"></p>
<p>这个平时用的好像比较少，他主要用在计算比率、平均速度等，他受极端值影响比“算术平均数”小，还以上面考试成绩为例，他的几何平均数是59<br><img src="http://upload-images.jianshu.io/upload_images/76024-d087b7c8ee8360f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>百度上有这样一个例子：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-1309e283df7cfda2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>就平均数的话，还有很多其他的内容，这里暂时不举例了，后面用到了再说</p>
<h1 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h1><h2 id="中位数与平均数与众数"><a href="#中位数与平均数与众数" class="headerlink" title="中位数与平均数与众数"></a>中位数与平均数与众数</h2><p>这里的平均数指“算术平均数”</p>
<ul>
<li>平均数主要表示数据整体水平，容易受极端数据影响</li>
<li>中位数表示数据的中等水平</li>
<li>众数反映的是一组数据中的集中程度，日常遇到的什么“最佳”、“最受欢迎”等等，都是众数的概念</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们日常生活中，经常会遇到平均数像什么平均工资，平均身高，平均成绩之类的，曾经在课上学习的相关知识估计早就忘记了，这里我们就来回顾下。&lt;br&gt;(下面部分介绍及例子摘自百度百科)&lt;/p&gt;
&lt;h1 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h1&gt;&lt;h2 id=&quot;算术平均数-arithmetic-mean&quot;&gt;&lt;a href=&quot;#算术平均数-arithmetic-mean&quot; class=&quot;headerlink&quot; title=&quot;算术平均数(arithmetic mean)&quot;&gt;&lt;/a&gt;算术平均数(arithmetic mean)&lt;/h2&gt;&lt;p&gt;通常我们说的平均数都是“算术平均数”：平均成绩、平均身高、平均收入…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一组数据中所有数据之和再除以这组数据的个数，他反映一组数据的集中趋势&lt;br&gt;– 百度百科&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-0f0afbe9f2d811df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;from 百度百科&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;加权算术平均数&quot;&gt;&lt;a href=&quot;#加权算术平均数&quot; class=&quot;headerlink&quot; title=&quot;加权算术平均数&quot;&gt;&lt;/a&gt;加权算术平均数&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;加权平均值即将各数值乘以相应的权数，然后加总求和得到总体值，再除以总的单位数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-2bc427421fad2046.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;from baidu&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个表示每个数据都有一个权重，也比较常见，比如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-727c31056126d50f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;from baidu&quot;&gt;&lt;/p&gt;
&lt;p&gt;通常我们再绩效考核中，有自评、领导评价，领导的评价一般权重较高，&lt;/p&gt;
    
    </summary>
    
      <category term="统计基础" scheme="https://yuguiyang.github.io/categories/%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="统计" scheme="https://yuguiyang.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-每周练习答案(2017-10-20)</title>
    <link href="https://yuguiyang.github.io/2017/10/21/mysql-handbook-14/"/>
    <id>https://yuguiyang.github.io/2017/10/21/mysql-handbook-14/</id>
    <published>2017-10-21T02:00:00.000Z</published>
    <updated>2017-10-21T03:34:22.297Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL<br>每周练习答案</p>
<p>这里和大家分享下本周练习题的一种解题思路</p>
<p>将题目简化一下，其实就是实现这样一个功能：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-ca0606de4cf51b9f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们将使用逗号分隔的数据，拆分为多行数据，熟悉MySQL的同学，可能会想到，这有点儿像group_concat函数，但这是他的逆过程</p>
<h1 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> tm_company(</div><div class="line">  company_name <span class="built_in">varchar</span>(<span class="number">10</span>),</div><div class="line">  company_industry <span class="built_in">varchar</span>(<span class="number">20</span>)</div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tm_company(company_name,company_industry) <span class="keyword">values</span>(<span class="string">'A公司'</span>,<span class="string">'移动互联网,金融'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tm_company(company_name,company_industry) <span class="keyword">values</span>(<span class="string">'B公司'</span>,<span class="string">'移动互联网'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tm_company(company_name,company_industry) <span class="keyword">values</span>(<span class="string">'C公司'</span>,<span class="string">'教育,招聘,魔法'</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">select</span> *<span class="keyword">from</span> tm_company;</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-bf06fbffe9d157cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<a id="more"></a>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>我们先来思考这样一个问题，怎样才能把用逗号分隔的数据拆分呢？<br>这里需要了解MySQL的字符串函数<br><a href="https://dev.mysql.com/doc/refman/5.7/en/string-functions.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.7/en/string-functions.html</a></p>
<h2 id="SUBSTRING-INDEX"><a href="#SUBSTRING-INDEX" class="headerlink" title="SUBSTRING_INDEX"></a>SUBSTRING_INDEX</h2><p>找一下，会发现这个函数，挺符合我们需求的</p>
<blockquote>
<p>SUBSTRING_INDEX(<em>str</em>,<em>delim</em>,<em>count</em>)<br>str 就是我们要分隔的字符串<br>delim 就是我们的分隔符<br>当count为正数时，我们从左侧开始截取，截止到delim第count次出现时；当count为负数时，则从右侧开始</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT SUBSTRING_INDEX('www.mysql.com', '.', 2);</div><div class="line">        -&gt; 'www.mysql'</div><div class="line">mysql&gt; SELECT SUBSTRING_INDEX('www.mysql.com', '.', -2);</div><div class="line">        -&gt; 'mysql.com'</div></pre></td></tr></table></figure>
<p>我们来试一下<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> </div><div class="line">  company_name,</div><div class="line">  substring_index(company_industry,<span class="string">','</span>,<span class="number">1</span>),</div><div class="line">  substring_index(company_industry,<span class="string">','</span>,<span class="number">2</span>),</div><div class="line">  substring_index(company_industry,<span class="string">','</span>,<span class="number">-1</span>)</div><div class="line"><span class="keyword">from</span> </div><div class="line">  tm_company;</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-eb162bd666ee8368.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>看上去，好像接近我们想要的数据，但还是有些问题<br>比如，我们需要判断到底要分隔几次，那该怎样判断要分隔几次呢？<br>其实就是看有几个逗号，那怎样判断有几个逗号呢？<br>好像并没有判断字符出现次数的函数，但我们可以绕个弯来实现<br>像这样，我们把逗号都替换掉，看数据长度减少了多少，就可以了<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> </div><div class="line">  company_name,</div><div class="line">  company_industry,</div><div class="line">  <span class="keyword">length</span>(company_industry)-<span class="keyword">length</span>(<span class="keyword">replace</span>(company_industry,<span class="string">','</span>,<span class="string">''</span>))</div><div class="line"><span class="keyword">from</span> </div><div class="line">  tm_company;</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-e65e298575bffd74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们再来观察下这个数据</p>
<ul>
<li>1个逗号的时候，我们需要拆分2次</li>
<li>0个逗号的时候，我们需要拆分1次</li>
<li>2个逗号的时候，我们需要拆分3次</li>
</ul>
<p>我们以C公司的数据来测试下<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> </div><div class="line">  substring_index(<span class="string">'教育,招聘,魔法'</span>,<span class="string">','</span>,<span class="number">1</span>),</div><div class="line">  substring_index(<span class="string">'教育,招聘,魔法'</span>,<span class="string">','</span>,<span class="number">2</span>),</div><div class="line">  substring_index(<span class="string">'教育,招聘,魔法'</span>,<span class="string">','</span>,<span class="number">3</span>)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-86ec73757e705d3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们观察下，会发现，最右边的数据就是我们想要的</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-393d09ca01679d14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> </div><div class="line">  substring_index(substring_index(<span class="string">'教育,招聘,魔法'</span>,<span class="string">','</span>,<span class="number">1</span>),<span class="string">','</span>,<span class="number">-1</span>),</div><div class="line">  substring_index(substring_index(<span class="string">'教育,招聘,魔法'</span>,<span class="string">','</span>,<span class="number">2</span>),<span class="string">','</span>,<span class="number">-1</span>),</div><div class="line">  substring_index(substring_index(<span class="string">'教育,招聘,魔法'</span>,<span class="string">','</span>,<span class="number">3</span>),<span class="string">','</span>,<span class="number">-1</span>)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-133c11eae3d4de52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>哎，好像是了嘛，数据现在已经分隔好了，现在的问题，好像变成了列转行</p>
<h2 id="列转行"><a href="#列转行" class="headerlink" title="列转行"></a>列转行</h2><p>因为我们的数据是动态分隔的，所以，做列转行的话，不能用之前的方法，可能需要使用另一种方法<br>我们看下上面分隔的时候，使用的下标，是自增的，而且和逗号的数量也有关<br>畅想一下（估计是经验），可以这样来做<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> *<span class="keyword">from</span> (</div><div class="line">  <span class="keyword">select</span> <span class="number">0</span> <span class="keyword">as</span> <span class="keyword">id</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">3</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">4</span></div><div class="line">) base</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-8630ef5582431d9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通常，我们会创建一张基础表，来方便使用。<br>我们可以这个数据来表示逗号的数量，然后这样</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> </div><div class="line">  a.company_name,</div><div class="line">  a.company_industry,</div><div class="line">  substring_index(substring_index(a.company_industry,<span class="string">','</span>,b.id+<span class="number">1</span>),<span class="string">','</span>,<span class="number">-1</span>)</div><div class="line"><span class="keyword">from</span> </div><div class="line">  tm_company a </div><div class="line"><span class="keyword">join</span> (</div><div class="line">  <span class="keyword">select</span> <span class="number">0</span> <span class="keyword">as</span> <span class="keyword">id</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">3</span></div><div class="line">  <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">4</span></div><div class="line">) b <span class="keyword">on</span> b.id &lt;= <span class="keyword">length</span>(a.company_industry)-<span class="keyword">length</span>(<span class="keyword">replace</span>(a.company_industry,<span class="string">','</span>,<span class="string">''</span>))</div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> </div><div class="line">  a.company_name;</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-1446b4feeb773cae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>好了，完成，我们通过1对多的关系，进行了列转行，再配合substring_index函数，我们就完成了上面的问题。</p>
<p>先这样，大家先理解下，欢迎反馈。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL&lt;br&gt;每周练习答案&lt;/p&gt;
&lt;p&gt;这里和大家分享下本周练习题的一种解题思路&lt;/p&gt;
&lt;p&gt;将题目简化一下，其实就是实现这样一个功能：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-ca0606de4cf51b9f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们将使用逗号分隔的数据，拆分为多行数据，熟悉MySQL的同学，可能会想到，这有点儿像group_concat函数，但这是他的逆过程&lt;/p&gt;
&lt;h1 id=&quot;测试数据&quot;&gt;&lt;a href=&quot;#测试数据&quot; class=&quot;headerlink&quot; title=&quot;测试数据&quot;&gt;&lt;/a&gt;测试数据&lt;/h1&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; tm_company(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  company_name &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  company_industry &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;into&lt;/span&gt; tm_company(company_name,company_industry) &lt;span class=&quot;keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;A公司&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;移动互联网,金融&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;into&lt;/span&gt; tm_company(company_name,company_industry) &lt;span class=&quot;keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;B公司&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;移动互联网&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;into&lt;/span&gt; tm_company(company_name,company_industry) &lt;span class=&quot;keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;C公司&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;教育,招聘,魔法&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; tm_company;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-bf06fbffe9d157cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/categories/MySQL/"/>
    
    
      <category term="SQL" scheme="https://yuguiyang.github.io/tags/SQL/"/>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-每周练习(2017-10-20)</title>
    <link href="https://yuguiyang.github.io/2017/10/18/mysql-handbook-13/"/>
    <id>https://yuguiyang.github.io/2017/10/18/mysql-handbook-13/</id>
    <published>2017-10-18T12:00:00.000Z</published>
    <updated>2017-10-20T01:51:49.411Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL<br>每周练习</p>
<p>本周我们来一道数据处理的练习题。</p>
<h2 id="数据背景"><a href="#数据背景" class="headerlink" title="数据背景"></a>数据背景</h2><p>不知道大家学会爬虫了没，拉勾网的数据大家会爬取了吗？这道题和拉勾网有关哦。<br>假设你已经学会爬取数据了，可以将数据爬取下来，数据可能是这个样子(demo库中的tm_lagou_data表)：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tm_lagou_data`</span> (</div><div class="line">  <span class="string">`city`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'城市'</span>,</div><div class="line">  <span class="string">`company_short_name`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'公司简称'</span>,</div><div class="line">  <span class="string">`company_full_name`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'公司全称'</span>,</div><div class="line">  <span class="string">`company_industry`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'所属行业'</span>,</div><div class="line">  <span class="string">`company_location`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'工作地点'</span>,</div><div class="line">  <span class="string">`position_advantage`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位特点'</span>,</div><div class="line">  <span class="string">`position_salary`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'薪资'</span>,</div><div class="line">  <span class="string">`position_workyear`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'工作经验'</span>,</div><div class="line">  <span class="string">`position_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'职位名称'</span>,</div><div class="line">  <span class="string">`position_first_type`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位类型-大类'</span>,</div><div class="line">  <span class="string">`position_second_type`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位类型-小类'</span>,</div><div class="line">  <span class="string">`position_lables`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位标签'</span>,</div><div class="line">  <span class="string">`position_id`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位ID'</span>,</div><div class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'发布时间'</span>,</div><div class="line">  <span class="string">`job_desc`</span> <span class="built_in">text</span> <span class="keyword">comment</span> <span class="string">'岗位描述'</span></div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'拉勾网-数据分析数据'</span>;</div></pre></td></tr></table></figure></p>
<p>在Python中，我们没有过多的处理，数据是这个样子的<br><img src="http://upload-images.jianshu.io/upload_images/76024-81e13eefdf889f63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这一次呢，我们只需要关注一个字段即可company_industry，这是公司所属行业<br>这个行业呢，一般会有多个，像上海的这个挖财网，就是互联网+金融，有2个标签，中间是逗号分隔符</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-ab333f17e91f01ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<a id="more"></a>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><h3 id="原始数据："><a href="#原始数据：" class="headerlink" title="原始数据："></a>原始数据：</h3><p>tm_lagou_data表中，company_industry（所属行业）字段可能会有多个值，并用逗号分隔<br><img src="http://upload-images.jianshu.io/upload_images/76024-1ce469095a15b9ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们的目的是把这个字段拆分，变成下面这样的数据</p>
<h3 id="处理后数据："><a href="#处理后数据：" class="headerlink" title="处理后数据："></a>处理后数据：</h3><p><img src="http://upload-images.jianshu.io/upload_images/76024-5750eafd236d2745.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>为了解决上面的问题，我们需要掌握的知识点如下：</p>
<ul>
<li><p>多表关联:<br><a href="https://yuguiyang.github.io/2017/09/09/mysql-handbook-03/">MySQL-关联查询</a><br><a href="http://www.runoob.com/mysql/mysql-join.html" target="_blank" rel="external">Mysql 连接的使用</a></p>
</li>
<li><p>字符串函数: <a href="https://dev.mysql.com/doc/refman/5.7/en/string-functions.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.7/en/string-functions.html</a></p>
</li>
</ul>
<h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><p>有了拆分后的数据，我们就可以看数据分析师的行业分布，哪个行业招的数据分析师最多，哪个行业招的最少了。<br><img src="http://upload-images.jianshu.io/upload_images/76024-608826b1e0bb4648.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL&lt;br&gt;每周练习&lt;/p&gt;
&lt;p&gt;本周我们来一道数据处理的练习题。&lt;/p&gt;
&lt;h2 id=&quot;数据背景&quot;&gt;&lt;a href=&quot;#数据背景&quot; class=&quot;headerlink&quot; title=&quot;数据背景&quot;&gt;&lt;/a&gt;数据背景&lt;/h2&gt;&lt;p&gt;不知道大家学会爬虫了没，拉勾网的数据大家会爬取了吗？这道题和拉勾网有关哦。&lt;br&gt;假设你已经学会爬取数据了，可以将数据爬取下来，数据可能是这个样子(demo库中的tm_lagou_data表)：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`tm_lagou_data`&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`city`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;城市&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_short_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;公司简称&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_full_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;公司全称&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_industry`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;所属行业&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_location`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;工作地点&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_advantage`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位特点&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_salary`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;薪资&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_workyear`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;工作经验&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;职位名称&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_first_type`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位类型-大类&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_second_type`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位类型-小类&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_lables`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位标签&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位ID&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`create_time`&lt;/span&gt; datetime &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;发布时间&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`job_desc`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位描述&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8 &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;拉勾网-数据分析数据&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在Python中，我们没有过多的处理，数据是这个样子的&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-81e13eefdf889f63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这一次呢，我们只需要关注一个字段即可company_industry，这是公司所属行业&lt;br&gt;这个行业呢，一般会有多个，像上海的这个挖财网，就是互联网+金融，有2个标签，中间是逗号分隔符&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-ab333f17e91f01ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/categories/MySQL/"/>
    
    
      <category term="SQL" scheme="https://yuguiyang.github.io/tags/SQL/"/>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数据分析师是否需要掌握SQL？</title>
    <link href="https://yuguiyang.github.io/2017/10/18/jotting-03/"/>
    <id>https://yuguiyang.github.io/2017/10/18/jotting-03/</id>
    <published>2017-10-18T12:00:00.000Z</published>
    <updated>2017-10-20T01:53:06.893Z</updated>
    
    <content type="html"><![CDATA[<p>前面，我们分析了一下数据分析师的前景<a href="https://yuguiyang.github.io/2017/10/18/jotting-02/">要不要找一份数据分析的工作？</a></p>
<p>这里，我们研究下，数据分析师是否需要掌握SQL。</p>
<h1 id="什么是数据分析师？"><a href="#什么是数据分析师？" class="headerlink" title="什么是数据分析师？"></a>什么是数据分析师？</h1><p>我们从字面来理解，数据分析师=数据+分析+师</p>
<h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><p>对于数据分析师来说，数据是基础，俗话说，巧妇难为无米之炊，没有数据，做什么可视化，做什么分析，<br>没有数据支撑的分析报告，一定是异想天开。<br>数据的来源通常有2中，一种是公司内部数据，一种是公司外部数据。<br>外部数据，我们可能需要通过第三方渠道购买，或者使用爬虫从网上爬取，通常的竞品分析啊，舆情分析啊，都属于这种；<br>内部数据，一般是公司业务数据，存储在数据库中，我们可以使用SQL来实现自己的业务需求。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>有了数据，我们需要在业务的基础上，通过分析方法、分析思维、模型等来发现问题，验证问题。<br>这个分析一定要基于业务，脱离业务的分析是没有任何价值的。</p>
<a id="more"></a>
<h1 id="真的要掌握SQL吗？"><a href="#真的要掌握SQL吗？" class="headerlink" title="真的要掌握SQL吗？"></a>真的要掌握SQL吗？</h1><p>上面，我们说了，分析公司内部的数据，需要使用SQL，行业内的其他公司是不是也是这样呢？<br>前面，我们爬取了拉勾网的数据，这里，我们就可以通过招聘数据证明一下，数据分析师是否需要掌握SQL</p>
<p>我们根据岗位需求的标签和岗位描述来判断是否需要掌握SQL<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">IF (</div><div class="line">    CONTAINS(upper([position_lables]),'SQL')</div><div class="line">    OR </div><div class="line">    CONTAINS(upper([job_desc]),'SQL')</div><div class="line">    )</div><div class="line">THEN '是'</div><div class="line">ELSE '否'</div><div class="line"><span class="keyword">END</span></div></pre></td></tr></table></figure></p>
<p>就岗位数量来看，每个城市的岗位中，需要掌握SQL的岗位都超过50%<br><img src="http://upload-images.jianshu.io/upload_images/76024-f393f5f9b08e057c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>就算SQL不是数据分析师必备的技能，掌握了SQL，你就多了50%的机会，我们再来看下，哪些公司的岗位需要掌握SQL呢</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-4257c5cbbff62bab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这些都是互联网知名的企业，跟着他们走没有问题。</p>
<p>总上所述，掌握了SQL，不会吃亏，不会上当，不说啦，我得学习SQL去了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面，我们分析了一下数据分析师的前景&lt;a href=&quot;https://yuguiyang.github.io/2017/10/18/jotting-02/&quot;&gt;要不要找一份数据分析的工作？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里，我们研究下，数据分析师是否需要掌握SQL。&lt;/p&gt;
&lt;h1 id=&quot;什么是数据分析师？&quot;&gt;&lt;a href=&quot;#什么是数据分析师？&quot; class=&quot;headerlink&quot; title=&quot;什么是数据分析师？&quot;&gt;&lt;/a&gt;什么是数据分析师？&lt;/h1&gt;&lt;p&gt;我们从字面来理解，数据分析师=数据+分析+师&lt;/p&gt;
&lt;h2 id=&quot;数据&quot;&gt;&lt;a href=&quot;#数据&quot; class=&quot;headerlink&quot; title=&quot;数据&quot;&gt;&lt;/a&gt;数据&lt;/h2&gt;&lt;p&gt;对于数据分析师来说，数据是基础，俗话说，巧妇难为无米之炊，没有数据，做什么可视化，做什么分析，&lt;br&gt;没有数据支撑的分析报告，一定是异想天开。&lt;br&gt;数据的来源通常有2中，一种是公司内部数据，一种是公司外部数据。&lt;br&gt;外部数据，我们可能需要通过第三方渠道购买，或者使用爬虫从网上爬取，通常的竞品分析啊，舆情分析啊，都属于这种；&lt;br&gt;内部数据，一般是公司业务数据，存储在数据库中，我们可以使用SQL来实现自己的业务需求。&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;有了数据，我们需要在业务的基础上，通过分析方法、分析思维、模型等来发现问题，验证问题。&lt;br&gt;这个分析一定要基于业务，脱离业务的分析是没有任何价值的。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://yuguiyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://yuguiyang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>要不要找一份数据分析的工作？</title>
    <link href="https://yuguiyang.github.io/2017/10/18/jotting-02/"/>
    <id>https://yuguiyang.github.io/2017/10/18/jotting-02/</id>
    <published>2017-10-18T09:00:00.000Z</published>
    <updated>2017-10-18T10:06:31.150Z</updated>
    
    <content type="html"><![CDATA[<p>前面，我们使用Python将拉勾网的数据爬取了下来，下面，我们就用Tableau做下探索式分析。</p>
<h1 id="数据基本情况介绍"><a href="#数据基本情况介绍" class="headerlink" title="数据基本情况介绍"></a>数据基本情况介绍</h1><p>我们在Python中只做了简单的清洗和整合，数据保存在MySQL中，数据只抓取了几个热门城市<br>表结构如下<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tm_lagou_data`</span> (</div><div class="line">  <span class="string">`city`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'城市'</span>,</div><div class="line">  <span class="string">`company_short_name`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'公司简称'</span>,</div><div class="line">  <span class="string">`company_full_name`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'公司全称'</span>,</div><div class="line">  <span class="string">`company_industry`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'所属行业'</span>,</div><div class="line">  <span class="string">`company_location`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'工作地点'</span>,</div><div class="line">  <span class="string">`position_advantage`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位特点'</span>,</div><div class="line">  <span class="string">`position_salary`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'薪资'</span>,</div><div class="line">  <span class="string">`position_workyear`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'工作经验'</span>,</div><div class="line">  <span class="string">`position_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'职位名称'</span>,</div><div class="line">  <span class="string">`position_first_type`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位类型-大类'</span>,</div><div class="line">  <span class="string">`position_second_type`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位类型-小类'</span>,</div><div class="line">  <span class="string">`position_lables`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位标签'</span>,</div><div class="line">  <span class="string">`position_id`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'岗位ID'</span>,</div><div class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'发布时间'</span>,</div><div class="line">  <span class="string">`job_desc`</span> <span class="built_in">text</span> <span class="keyword">comment</span> <span class="string">'岗位描述'</span></div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'拉勾网-数据分析数据'</span>;</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-0185d4d0faff7a03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>洗个脸，刷个牙我们要开始分析啦。</p>
<h1 id="哪儿的数据分析岗位最多呢？"><a href="#哪儿的数据分析岗位最多呢？" class="headerlink" title="哪儿的数据分析岗位最多呢？"></a>哪儿的数据分析岗位最多呢？</h1><p>作为一名求职者，我想知道哪里的数据分析岗位最多，我以后要去哪个城市上班呢？是不是我喜欢的城市呢？<br>打开Tableau，连上数据库，我们开始<br>我们的数据中，有城市信息，也有招聘公司信息，岗位信息，所以这个很简单</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-f9cdb0b0c6cbb6e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们会发现，北上深杭广招聘数据分析的公司和岗位最多，公司多，招聘的岗位也多嘛，<br>所以，如果要找数据分析的工作，在这几个城市还是很有机会的，随着北上广深等城市的带动，新一线城市后续应该也会逐渐提高对数据的重视，数据分析岗位应该会越来越多。<br>这里也发现一个有趣的问题，就是杭州和广州，以前我们说一线城市，可能主要是北上广深，最近几年随着杭州的崛起（我觉得和阿里有很大的关系），广州是不是逐渐的掉队了呢？</p>
<a id="more"></a>
<p>最近正好十九大，推出了纪念邮票，好多新闻都是这张图<br><img src="http://upload-images.jianshu.io/upload_images/76024-1998dc950f5d8c8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>广州到底咋了，后面我们也可以找些数据分析下。<br>单从拉勾的招聘信息的确可以看出，杭州的对数据分析的需求量的确稍大于广州。<br>我们顺便看下杭州和广州，在哪些行业存在差距</p>
<p>就招聘数据分析的公司数量来看，移动互联网、金融、O2O等行业，杭州都明显多于广州，但一些行业，像游戏、娱乐，广州还是多于杭州的，这可能和创业的环境也有关系<br><img src="http://upload-images.jianshu.io/upload_images/76024-857c673018fb41b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="是我喜欢的行业吗？"><a href="#是我喜欢的行业吗？" class="headerlink" title="是我喜欢的行业吗？"></a>是我喜欢的行业吗？</h1><p>以前刚毕业的时候，觉得行业不重要，哪里工资高我就去哪儿（当然，去哪儿不归我管，人家得要我啊）<br>工作这些年发现，选择一个喜欢的行业真的很重要，前面，我们也看了杭州和广州的行业分布，整体环境呢？<br><img src="http://upload-images.jianshu.io/upload_images/76024-35d172b71104af22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>需求量最高的依然的移动互联网，现在都是互联网+，移动端更加的流量越来越大，这些行业也都走在技术前沿。</p>
<h1 id="数据分析对工作经验有啥要求？"><a href="#数据分析对工作经验有啥要求？" class="headerlink" title="数据分析对工作经验有啥要求？"></a>数据分析对工作经验有啥要求？</h1><p>前面我们知道了，北上深杭对数据分析师的需求量很大，我刚毕业，或者工作1，2年，可以去应聘吗？<br>我们来看看。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-11f6b1e49aacd60d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>就工作经验来看，北上深杭广70%以上的岗位都是1-3年、3-5年的工作经验，所以，好好准备下，放心大胆的投入数据分析的事业中去吧。<br>应届生也不用怕，可能校招的岗位这些互联网公司没有发在拉钩上，多关注企业的招聘公告和宣讲会之类的；这里还有不限工作经验的工作呢，只要你掌握数据分析的技能和相关知识，一定可以的。</p>
<h1 id="薪资够付房租吗？"><a href="#薪资够付房租吗？" class="headerlink" title="薪资够付房租吗？"></a>薪资够付房租吗？</h1><p>找工作一个是前景，一个是钱景，房租那么贵，数据分析师的工资咋样？<br>由于网上招聘的薪资，都是一个区间，比如 10K-20K，我就取了个平均值，然后取中位数，这样不是很严谨，但也能反映一些问题<br><img src="http://upload-images.jianshu.io/upload_images/76024-0c18e1c559e950df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>整体来看，薪资还是基本符合大众情况的，但是北京那个10年以上的咋才16K呢？<br>一定还有别的附加福利，数据是上周爬的，现在已经没有了，等我后面重跑下脚本看看</p>
<p>单从工作经验来看薪资分布<br><img src="http://upload-images.jianshu.io/upload_images/76024-4a800a2c71166d63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>练好技术，练好口才，面试时要谈好自己的工资啊，物价越来越高，不能光给我们谈理想，我们还得生活呢！</p>
<h1 id="有啥别的福利（面试时咋忽悠你）"><a href="#有啥别的福利（面试时咋忽悠你）" class="headerlink" title="有啥别的福利（面试时咋忽悠你）"></a>有啥别的福利（面试时咋忽悠你）</h1><p>拉勾上的招聘信息都有一个标签，岗位的一些优势，我们做成一个词云图看看</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-0b566aee1bf262ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>主要是基本的福利保障，弹性工作啊，带薪年假啊，年终奖啊，发展空间啥的，面试时，一定得问好，别不好意思问。</p>
<p>好辣，回到主题，我们要不要找一份数据分析的工作呢？</p>
<ul>
<li>机会很多，北上深杭广需求量都不少</li>
<li>行业也不错，紧随时代潮流</li>
<li>薪资也可以啊，主要还是看自己实力哈</li>
</ul>
<p>综上所述，数据分析很不靠谱，大家都不要来呦（老板，招不招数据分析，觉得我咋样）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面，我们使用Python将拉勾网的数据爬取了下来，下面，我们就用Tableau做下探索式分析。&lt;/p&gt;
&lt;h1 id=&quot;数据基本情况介绍&quot;&gt;&lt;a href=&quot;#数据基本情况介绍&quot; class=&quot;headerlink&quot; title=&quot;数据基本情况介绍&quot;&gt;&lt;/a&gt;数据基本情况介绍&lt;/h1&gt;&lt;p&gt;我们在Python中只做了简单的清洗和整合，数据保存在MySQL中，数据只抓取了几个热门城市&lt;br&gt;表结构如下&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`tm_lagou_data`&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`city`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;城市&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_short_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;公司简称&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_full_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;公司全称&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_industry`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;所属行业&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`company_location`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;工作地点&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_advantage`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位特点&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_salary`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;薪资&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_workyear`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;工作经验&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;职位名称&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_first_type`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位类型-大类&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_second_type`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位类型-小类&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_lables`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位标签&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`position_id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位ID&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`create_time`&lt;/span&gt; datetime &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;发布时间&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`job_desc`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岗位描述&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8 &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;拉勾网-数据分析数据&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-0185d4d0faff7a03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;洗个脸，刷个牙我们要开始分析啦。&lt;/p&gt;
&lt;h1 id=&quot;哪儿的数据分析岗位最多呢？&quot;&gt;&lt;a href=&quot;#哪儿的数据分析岗位最多呢？&quot; class=&quot;headerlink&quot; title=&quot;哪儿的数据分析岗位最多呢？&quot;&gt;&lt;/a&gt;哪儿的数据分析岗位最多呢？&lt;/h1&gt;&lt;p&gt;作为一名求职者，我想知道哪里的数据分析岗位最多，我以后要去哪个城市上班呢？是不是我喜欢的城市呢？&lt;br&gt;打开Tableau，连上数据库，我们开始&lt;br&gt;我们的数据中，有城市信息，也有招聘公司信息，岗位信息，所以这个很简单&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-f9cdb0b0c6cbb6e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们会发现，北上深杭广招聘数据分析的公司和岗位最多，公司多，招聘的岗位也多嘛，&lt;br&gt;所以，如果要找数据分析的工作，在这几个城市还是很有机会的，随着北上广深等城市的带动，新一线城市后续应该也会逐渐提高对数据的重视，数据分析岗位应该会越来越多。&lt;br&gt;这里也发现一个有趣的问题，就是杭州和广州，以前我们说一线城市，可能主要是北上广深，最近几年随着杭州的崛起（我觉得和阿里有很大的关系），广州是不是逐渐的掉队了呢？&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://yuguiyang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://yuguiyang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="数据分析报告" scheme="https://yuguiyang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-疑问汇总</title>
    <link href="https://yuguiyang.github.io/2017/10/12/mysql-handbook-12/"/>
    <id>https://yuguiyang.github.io/2017/10/12/mysql-handbook-12/</id>
    <published>2017-10-12T10:00:00.000Z</published>
    <updated>2017-10-13T14:05:15.391Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL<br>疑问汇总</p>
<p>这里吧同学们遇到的问题都汇总起来，方便大家一起查阅。</p>
<h2 id="update-at-2017-10-13"><a href="#update-at-2017-10-13" class="headerlink" title="update at 2017-10-13"></a>update at 2017-10-13</h2><h3 id="Workbench安装问题"><a href="#Workbench安装问题" class="headerlink" title="Workbench安装问题"></a>Workbench安装问题</h3><p>昨天就说过Workbench的安装问题，具体的可以往下看，这里记录一个类似问题<br>因为安装Workbench需要一些依赖先安装，比如那个.NET Framework，官网上提供的连接地址应该没有修改，如果直接跳转去下载，应该是.NET FRAMEWORK４.５的，但实际安装的时候，是需要4.5.2的</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-dffabb12e4e55bb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>而且在安装4.5的时候，可能还会遇到这样的情况，说本地已经安装过了，所以去下载4.5.2就可以了，<br><img src="http://upload-images.jianshu.io/upload_images/76024-5a3b8ff3e217c3c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>后面经过同学的验证，就是这样解决的，没有问题。</p>
<a id="more"></a>
<h3 id="连接测试数据库"><a href="#连接测试数据库" class="headerlink" title="连接测试数据库"></a>连接测试数据库</h3><p>今天遇到一个使用客户端连接测试数据库一直不行的问题。背景是这样的：<br>测试数据库在阿里云上，很多人都可以访问，说明数据库配置啥的没有问题，但是有一位同学的电脑就是访问不了，报下面这个错误<br><img src="http://upload-images.jianshu.io/upload_images/76024-ef1392a615f872ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>网上也找过，都说是服务器端配置问题，但是已知服务器端没有问题，这就奇了怪了，该电脑也是可以ping通服务器的。后面了解到，这位同学是在外企，公司的网络是美国的网络，但是网上查说国外访问国内的阿里云是可以的。没有想到其他什么原因，估计就是所在的公司网络有问题，导致连不到阿里云。<br>最后，同学回家后，用家里的网络就可以访问了。<br>这种问题，常见解决方法就是，排查2个方面</p>
<ul>
<li>服务器端配置问题</li>
<li>本地网络问题</li>
</ul>
<p>###SQLZoo练习题<br>原题地址<a href="http://zh.sqlzoo.net/wiki/More_JOIN_operations" target="_blank" rel="external">http://zh.sqlzoo.net/wiki/More_JOIN_operations</a><br>第13题</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-8c0eb786227f36eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这道题呢，不是很难，有2点比较难</p>
<ul>
<li>英文的，哈哈，借助了有道翻译</li>
<li>一个字段没理解含义，导致出错</li>
</ul>
<p>题目是啥意思呢？就是说要返回一个演员列表，按照字母顺序，主演过30个以上的角色<br>我们只要搞明白那几张表就行了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-95c5eb48169c9f45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这个演员名单表，存的是电影ID和演员ID，注意这个ord表示的是，电影中演员的排名，ord=1才表示主演<br>参考介绍<a href="http://zh.sqlzoo.net/wiki/More_details_about_the_database." target="_blank" rel="external">http://zh.sqlzoo.net/wiki/More_details_about_the_database.</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-b457f4b239165e2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这些都搞明白，SQL就容易了<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> actor <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">select</span> actorid <span class="keyword">from</span> casting <span class="keyword">where</span> <span class="keyword">ord</span>=<span class="number">1</span> <span class="keyword">group</span> <span class="keyword">by</span> actorid <span class="keyword">having</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> movieid)&gt;=<span class="number">30</span>)</div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">desc</span></div><div class="line"></div><div class="line"><span class="comment">-- 或者这样</span></div><div class="line"><span class="keyword">select</span> a.name <span class="keyword">from</span> actor a </div><div class="line"><span class="keyword">join</span> casting b <span class="keyword">on</span> a.id=b.actorid </div><div class="line"><span class="keyword">where</span> b.ord=<span class="number">1</span> </div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.name</div><div class="line"><span class="keyword">having</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> b.movieid)&gt;=<span class="number">30</span></div></pre></td></tr></table></figure></p>
<p>上面的order by可以不要，好辣，今天问题整理到这里。</p>
<hr>
<h2 id="update-at-2017-10-12"><a href="#update-at-2017-10-12" class="headerlink" title="update at 2017-10-12"></a>update at 2017-10-12</h2><h3 id="1-Workbench、Navicat是干嘛的，和SQL有啥关系？"><a href="#1-Workbench、Navicat是干嘛的，和SQL有啥关系？" class="headerlink" title="1. Workbench、Navicat是干嘛的，和SQL有啥关系？"></a>1. Workbench、Navicat是干嘛的，和SQL有啥关系？</h3><p>Workbench和Navicat都是数据库管理工具，让我们可以方便快捷的管理和使用数据库。类似的工具有很多，免费的、收费的好多好多，就好像共享单车，ofo、mobike、小蓝单车、小鸣单车……用哪个都可以，看我们的选择了。</p>
<p>SQL呢？是一种查询语言，虽然和写代码编程有关，但是不用怕，记住九九乘法表，后面就是活学活用了。我们为了和数据库成为好朋友，得多和他聊天吧，但我们和他不是一个星球的，那咋办？巧了，他听得懂SQL，那我们学下SQL，就可以愉快的玩耍了。这里呢，我们还得注意一下，目前市场上在使用的数据库有很多，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-2f8349a4793e8a7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="dbs"></p>
<!-- more -->
<p>SQL是一套标准，其他每个数据库都会实现规定的基本功能，然后拓展些自己的语法，所以很不幸，换一个数据库，我们的SQL不一定完全跑的通。<br>但是，只要我们掌握了标准的SQL语法然后针对不同的数据库，关注下特殊语法就可以了（会骑ofo，换了Mobike就不会骑了吗？）</p>
<p>综上所述，我们是通过管理工具（Workbench、Navicat……）去使用和管理数据库（MySQL…..），在管理工具中，我们使用SQL来和数据库互动。</p>
<h3 id="2-Workbench的使用"><a href="#2-Workbench的使用" class="headerlink" title="2. Workbench的使用"></a>2. Workbench的使用</h3><p>参考：<a href="http://yuguiyang.github.io/2017/10/12/mysql-handbook-11/">MySQL-Workbench使用</a></p>
<h3 id="3-sqlzoo第九题"><a href="#3-sqlzoo第九题" class="headerlink" title="3. sqlzoo第九题"></a>3. sqlzoo第九题</h3><p>题目地址: <a href="https://sqlzoo.net/wiki/SELECT_within_SELECT_Tutorial/zh" target="_blank" rel="external">sqlzoo</a><br>首先是关于all的疑问</p>
<p>关于all可以参考这里先简单了解下：<a href="http://yuguiyang.github.io/2017/09/11/mysql-handbook-08/">MySQL-子查询的使用</a></p>
<p>SQL这样写是没问题的<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> </div><div class="line">    <span class="keyword">name</span>,</div><div class="line">    continent,</div><div class="line">    population </div><div class="line"><span class="keyword">FROM</span> </div><div class="line">    world x</div><div class="line">    <span class="comment">-- 返回符合条件的所有数据</span></div><div class="line"><span class="keyword">WHERE</span> </div><div class="line">    <span class="comment">-- 使用all，判断该州的所有人口数是否都 &lt;= 25000000</span></div><div class="line">    <span class="number">25000000</span>  &gt;= ALL(</div><div class="line">        <span class="comment">-- 我们使用子查询，获取每一个州的所有人口数</span></div><div class="line">        <span class="keyword">SELECT</span> </div><div class="line">            population </div><div class="line">        <span class="keyword">FROM</span> </div><div class="line">            world y </div><div class="line">        <span class="keyword">WHERE</span>  x.continent =y.continent</div><div class="line">    )</div></pre></td></tr></table></figure></p>
<ul>
<li>疑问1： 能不能把这个all放到后面像这样</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-a537d0341c36d46f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>答案是不行的，这个不符合all的使用语法，具体语法参考官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/all-subqueries.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.7/en/all-subqueries.html</a></p>
<p>all一定要放在一个比较运算符的后面才行，所以，替换是不符合规范的，会报错<br><img src="http://upload-images.jianshu.io/upload_images/76024-5038df8497d11e52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>疑问2：为什么下面的写法不对<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">name</span>,</div><div class="line">    continent,</div><div class="line">    population </div><div class="line"><span class="keyword">FROM</span> </div><div class="line">    world </div><div class="line"><span class="keyword">WHERE</span>  </div><div class="line">    <span class="number">25000000</span> &gt;= ALL(</div><div class="line">        <span class="keyword">SELECT</span> </div><div class="line">            <span class="keyword">MAX</span>(population) </div><div class="line">        <span class="keyword">FROM</span> </div><div class="line">            world  </div><div class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> </div><div class="line">            continent </div><div class="line">    )</div></pre></td></tr></table></figure>
</li>
</ul>
<p>我们分析下题目，他是说要查询出州下面每个城市的人口数都小于等于25000000的记录<br>上面我们就是使用all来实现去判断每个州下面的所有城市的人口数都&lt;= 25000000，现在呢，不想去判断每个城市的人口数了，我只要拿出该州下面最大的人口数，然后判断这个最大值是不是&lt;= 25000000就可以了。<br>思路是对的，但是SQL稍微有些问题<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 要么返回所有记录，要么没有返回记录</span></div><div class="line"><span class="keyword">SELECT</span></div><div class="line">    <span class="keyword">name</span>,</div><div class="line">    continent,</div><div class="line">    population </div><div class="line"><span class="keyword">FROM</span> </div><div class="line">    world </div><div class="line"><span class="keyword">WHERE</span>  </div><div class="line">    <span class="comment">-- 因为主表world和子查询没有关联关系，所以这里的all就变成了“每个州的最大人口数是不是都 &lt;= 25000000</span></div><div class="line">    <span class="comment">-- 也就是说，下面子查询的返回值，如果都是 &lt;= 25000000，那就会返回world表的所有数据；如果有一个州的人口数 &gt;25000000，那就没有记录返回</span></div><div class="line">    <span class="number">25000000</span> &gt;= ALL(</div><div class="line">        <span class="comment">-- 获取每个州，最大的人口数</span></div><div class="line">        <span class="keyword">SELECT</span> </div><div class="line">            <span class="keyword">MAX</span>(population) </div><div class="line">        <span class="keyword">FROM</span> </div><div class="line">            world  </div><div class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> </div><div class="line">            continent </div><div class="line">    )</div></pre></td></tr></table></figure></p>
<p>所以，我们要做的改动，就是让主表和子查询有关联关系，即判断每一个州的最大值</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-6a16efbffe7d9a3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>不使用all也可以，<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 查询符合条件的州即可</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">name</span>,continent,population <span class="keyword">from</span> world <span class="keyword">where</span> continent <span class="keyword">in</span> (</div><div class="line">    <span class="comment">-- 使用having直接过滤，判断每个州的最大人口是否&lt;= 25000000</span></div><div class="line">    <span class="keyword">select</span> continent <span class="keyword">from</span> world <span class="keyword">group</span> <span class="keyword">by</span> continent <span class="keyword">having</span> <span class="keyword">max</span>(population) &lt;= <span class="number">25000000</span></div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>好了，这个问题，也写到这，大家可以看看还有没有别的写法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL&lt;br&gt;疑问汇总&lt;/p&gt;
&lt;p&gt;这里吧同学们遇到的问题都汇总起来，方便大家一起查阅。&lt;/p&gt;
&lt;h2 id=&quot;update-at-2017-10-13&quot;&gt;&lt;a href=&quot;#update-at-2017-10-13&quot; class=&quot;headerlink&quot; title=&quot;update at 2017-10-13&quot;&gt;&lt;/a&gt;update at 2017-10-13&lt;/h2&gt;&lt;h3 id=&quot;Workbench安装问题&quot;&gt;&lt;a href=&quot;#Workbench安装问题&quot; class=&quot;headerlink&quot; title=&quot;Workbench安装问题&quot;&gt;&lt;/a&gt;Workbench安装问题&lt;/h3&gt;&lt;p&gt;昨天就说过Workbench的安装问题，具体的可以往下看，这里记录一个类似问题&lt;br&gt;因为安装Workbench需要一些依赖先安装，比如那个.NET Framework，官网上提供的连接地址应该没有修改，如果直接跳转去下载，应该是.NET FRAMEWORK４.５的，但实际安装的时候，是需要4.5.2的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-dffabb12e4e55bb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而且在安装4.5的时候，可能还会遇到这样的情况，说本地已经安装过了，所以去下载4.5.2就可以了，&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-5a3b8ff3e217c3c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;后面经过同学的验证，就是这样解决的，没有问题。&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/categories/MySQL/"/>
    
    
      <category term="SQL" scheme="https://yuguiyang.github.io/tags/SQL/"/>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-Workbench使用</title>
    <link href="https://yuguiyang.github.io/2017/10/12/mysql-handbook-11/"/>
    <id>https://yuguiyang.github.io/2017/10/12/mysql-handbook-11/</id>
    <published>2017-10-12T08:00:00.000Z</published>
    <updated>2017-10-12T10:00:18.478Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL<br>Workbench使用</p>
<p>简单介绍下Workbench的使用<br>Workbench是MySQL官方提供的一个可视化管理工具，跨多个平台而且免费的，详情参考<a href="https://www.mysql.com/products/workbench/" target="_blank" rel="external">官网</a>。<br>我们从下载地址下载，安装就行了</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="http://upload-images.jianshu.io/upload_images/76024-7b7ea58cc50de3b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="workbench 安装"><br>可以单独下载，也可以使用提供的一个管理工具统一下载管理，管理工具提供了整个MySQL所有相关组件的统一管理维护，也挺方便。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-f1ad915acdeb4815.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="管理工具"></p>
<a id="more"></a>
<p>我们这里就是用独立安装包了，下载完之后安装，可能会失败，因为他有2个依赖要先安装，失败的话，会提示你缺少的依赖。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-e72ac9b47dc55954.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="依赖"></p>
<p>这里有个小坑，这里说的是.NET Framework 4.5，但实际上需要的是4.5.2貌似不太一样，所以刚刚一直安装失败，注意下就行了<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642" target="_blank" rel="external">.NET Framework 4.5.2</a></p>
<p>安装过程就是一路Next就行了，没啥特殊的。<br>安装完之后，我们在桌面或者菜单找到这个</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-df302f1ca148ad08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>主界面应该是这样：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-464160f15ea2fc02.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="主界面"></p>
<h2 id="新建连接"><a href="#新建连接" class="headerlink" title="新建连接"></a>新建连接</h2><p>我们点击加号，新增一个连接<br><img src="http://upload-images.jianshu.io/upload_images/76024-b965fbf385983a07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新建连接"></p>
<p>在弹出的界面上，输入数据库的连接信息，就可以了，密码下图所示的地方输入</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-084e3359386f57c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="密码"></p>
<p>输入完成后，我们测试下连接是否正常<br><img src="http://upload-images.jianshu.io/upload_images/76024-e52ac70f136395ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试连接"></p>
<p>都正常后，我们单击OK就好了</p>
<p>返回主界面后，可以看到我们刚刚新建的连接，我们双击就可以打开这个连接，开始我们的SQL学习了<br><img src="http://upload-images.jianshu.io/upload_images/76024-b9e4445db4c84577.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="成功的连接"></p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><p><img src="http://upload-images.jianshu.io/upload_images/76024-95ed8b3f264f8166.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="主界面介绍"><br>我们目前主要关心的是SQL的学习，所以那些管理功能可以先忽略掉<br>我们主要关注“当前可以使用的数据库”和SQL的编辑界面就OK了</p>
<p>我们以demo库为例</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-ed56a50a473520b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="demo库"><br>这里就是demo库中的表，数据库中的数据是以表的形式保存的<br>比如，我们看看学生表的表结构信息，单击这个表旁边的”i”图标</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-4f73aaf40415718f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="表结构"></p>
<p>右边会显示一个表的信息界面，字段啊，索引啊，触发器之类的，我们这里就看看DDL<br><img src="http://upload-images.jianshu.io/upload_images/76024-74048925f5ad4b09.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="表信息"></p>
<p>这里展示的就是t_student表的表结构信息<br><img src="http://upload-images.jianshu.io/upload_images/76024-a669737616fa7148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ddl"></p>
<h2 id="SQL练习"><a href="#SQL练习" class="headerlink" title="SQL练习"></a>SQL练习</h2><p>下面，我们看看，怎样去练习SQL<br>我们回到刚刚的query界面</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-78f35b844bccc1ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="query界面"></p>
<p>首先，我们要选择我们使用的数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">use</span> demo;</div></pre></td></tr></table></figure></p>
<p>写好SQL，我们单击那个像闪电一样的图标执行，下面的输出窗口会显示执行结果，绿色的对号表示正确执行<br><img src="http://upload-images.jianshu.io/upload_images/76024-8e7af97235422c15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="use db"></p>
<p>然后，就可以各种SQL开始练习了<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> *<span class="keyword">from</span> t_student;</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-e17c39c9930c96af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="select"></p>
<p>后面，我们就可以参考前面的博客，开始学习吧<a href="https://yuguiyang.github.io/2017/09/09/mysql-handbook-01/">MySQL-基本语法介绍</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL&lt;br&gt;Workbench使用&lt;/p&gt;
&lt;p&gt;简单介绍下Workbench的使用&lt;br&gt;Workbench是MySQL官方提供的一个可视化管理工具，跨多个平台而且免费的，详情参考&lt;a href=&quot;https://www.mysql.com/products/workbench/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;。&lt;br&gt;我们从下载地址下载，安装就行了&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-7b7ea58cc50de3b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;workbench 安装&quot;&gt;&lt;br&gt;可以单独下载，也可以使用提供的一个管理工具统一下载管理，管理工具提供了整个MySQL所有相关组件的统一管理维护，也挺方便。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-f1ad915acdeb4815.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;管理工具&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/categories/MySQL/"/>
    
    
      <category term="SQL" scheme="https://yuguiyang.github.io/tags/SQL/"/>
    
      <category term="MySQL" scheme="https://yuguiyang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Tableau实例-帕累托图</title>
    <link href="https://yuguiyang.github.io/2017/09/20/Tableau-handbook-06/"/>
    <id>https://yuguiyang.github.io/2017/09/20/Tableau-handbook-06/</id>
    <published>2017-09-20T02:00:00.000Z</published>
    <updated>2017-09-19T16:08:05.729Z</updated>
    
    <content type="html"><![CDATA[<p>Tableau实例<br>帕累托图</p>
<p>前面，我们了解了<a href="https://yuguiyang.github.io/2017/09/18/jotting-01/">《帕累托的故事》</a> 和 <a href="https://yuguiyang.github.io//2017/09/18/analysis-method-01/">二八定律与长尾理论</a>，这里，我们学习下，在Tableau中，如何适用Tableau来绘制帕累托图。</p>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>数据源：官方数据源“示例-超市”<br>因为，帕累托分布，主要是20%的商品可以产生80%的价值，所以，我们可以使用示例数据中的订单数据，来看看订单的销量是否符合帕累托分布。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-b95435afb86c9e6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据源"></p>
<h1 id="初级-每个类别的销售额分布"><a href="#初级-每个类别的销售额分布" class="headerlink" title="初级-每个类别的销售额分布"></a>初级-每个类别的销售额分布</h1><p>我们先来研究下，看产品的类别销售额是否符合帕累托分布，帕累托图有一个柱形图，有一个折线图，<br>柱形图，表示每个类别的销售额，而折线图表示每个类别的销售额占比</p>
<p>柱形图就直接使用子类别和销售额就行了<br><img src="http://upload-images.jianshu.io/upload_images/76024-d8b12c89ef4325c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="每个类别的销售额"></p>
<p>然后，我们实现折线图<br>在行中，再拖一个销售额</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-15ceac91c846b724.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<a id="more"></a>
<p>然后修改标记的类型，改为“线”<br><img src="http://upload-images.jianshu.io/upload_images/76024-c8c25bc1f1f3b1bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>效果图<br><img src="http://upload-images.jianshu.io/upload_images/76024-483c6800fce90cea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>但这个折线图，并不是我们要的，我们想要的是一个占总额的百分比<br>我们要修改第2个“总计销售额”，添加表计算<br><img src="http://upload-images.jianshu.io/upload_images/76024-93bbe88f5b45395a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们主要计算类型，选择汇总-总计，并且勾选“添加辅助计算”，选择“总额百分比”<br><img src="http://upload-images.jianshu.io/upload_images/76024-5f3203403d0caf28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们把修改好的“总额百分比”，拖到“标签”上，然后效果如图所示<br><img src="http://upload-images.jianshu.io/upload_images/76024-b54c815aedd3bbf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>顺手，我们修改下折线图的颜色，因为后面，我们还要合并呢<br><img src="http://upload-images.jianshu.io/upload_images/76024-2efbd4852bac024a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们再折线图的y轴上，右键，单击选择“双轴”<br><img src="http://upload-images.jianshu.io/upload_images/76024-75a6f4ffaf3f25a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>他自动会变成这样，我们得手动改成柱形图和折线图（颜色也白改了…）<br><img src="http://upload-images.jianshu.io/upload_images/76024-6e96af2abe9baced.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>调整完之后，就是这样啦，<br><img src="http://upload-images.jianshu.io/upload_images/76024-7caeefa153b36655.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>我们调整下柱形图的y轴刻度，让他更像些</p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-f06a129d1a45c22a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-47444732bcb67aa7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/76024-2a98f1e8e1e85960.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="进阶-产品占比与销售额占比"><a href="#进阶-产品占比与销售额占比" class="headerlink" title="进阶-产品占比与销售额占比"></a>进阶-产品占比与销售额占比</h1><p>上面，我们做的是，哪些类别的销售额占80%，这里，我们想根据产品来看，并且想知道产品的百分之多少占了80%的销售额</p>
<p>和上面的步骤类似，这里，我们使用产品名称，效果如图<br><img src="http://upload-images.jianshu.io/upload_images/76024-60225105a25296c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>但是这里，产品实在是太多了，我们想让x轴更简洁一些，就显示百分比好了</p>
<p>未完待续……</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tableau实例&lt;br&gt;帕累托图&lt;/p&gt;
&lt;p&gt;前面，我们了解了&lt;a href=&quot;https://yuguiyang.github.io/2017/09/18/jotting-01/&quot;&gt;《帕累托的故事》&lt;/a&gt; 和 &lt;a href=&quot;https://yuguiyang.github.io//2017/09/18/analysis-method-01/&quot;&gt;二八定律与长尾理论&lt;/a&gt;，这里，我们学习下，在Tableau中，如何适用Tableau来绘制帕累托图。&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;数据源：官方数据源“示例-超市”&lt;br&gt;因为，帕累托分布，主要是20%的商品可以产生80%的价值，所以，我们可以使用示例数据中的订单数据，来看看订单的销量是否符合帕累托分布。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-b95435afb86c9e6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;数据源&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;初级-每个类别的销售额分布&quot;&gt;&lt;a href=&quot;#初级-每个类别的销售额分布&quot; class=&quot;headerlink&quot; title=&quot;初级-每个类别的销售额分布&quot;&gt;&lt;/a&gt;初级-每个类别的销售额分布&lt;/h1&gt;&lt;p&gt;我们先来研究下，看产品的类别销售额是否符合帕累托分布，帕累托图有一个柱形图，有一个折线图，&lt;br&gt;柱形图，表示每个类别的销售额，而折线图表示每个类别的销售额占比&lt;/p&gt;
&lt;p&gt;柱形图就直接使用子类别和销售额就行了&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-d8b12c89ef4325c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;每个类别的销售额&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后，我们实现折线图&lt;br&gt;在行中，再拖一个销售额&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/76024-15ceac91c846b724.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tableau" scheme="https://yuguiyang.github.io/categories/Tableau/"/>
    
    
      <category term="数据可视化" scheme="https://yuguiyang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="Tableau" scheme="https://yuguiyang.github.io/tags/Tableau/"/>
    
  </entry>
  
</feed>
